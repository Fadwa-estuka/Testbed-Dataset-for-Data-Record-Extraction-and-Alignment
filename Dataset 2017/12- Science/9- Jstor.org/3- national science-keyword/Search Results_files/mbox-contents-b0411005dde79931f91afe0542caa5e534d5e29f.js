var mboxCopyright = "Copyright 1996-2015. Adobe Systems Incorporated. All rights reserved.";var TNT = TNT || {};TNT.a = (function() { return { nestedMboxes: [], b: { companyName: "Test&amp;Target", isProduction: true, adminUrl: "http://admin3.testandtarget.omniture.com/admin", clientCode: "ithakaharbors", serverHost: "ithakaharbors.tt.omtrdc.net", mboxTimeout: 15000, mboxLoadedTimeout: 100, mboxFactoryDisabledTimeout: 30 * 60, bodyPollingTimeout: 16, sessionExpirationTimeout: 31 * 60, experienceManagerDisabledTimeout: 30 * 60, experienceManagerTimeout: 5000, visitorApiTimeout: 500, visitorApiPageDisplayTimeout: 500, overrideMboxEdgeServer: false, overrideMboxEdgeServerTimeout: 31 * 60, tntIdLifetime: 1209600, crossDomain: "enabled", trafficDuration: 10368000, trafficLevelPercentage: 100, clientSessionIdSupport: false, clientTntIdSupport: false, passPageParameters: true, usePersistentCookies: true, crossDomainEnabled: true, crossDomainXOnly: false, imsOrgId: "774C31DD5342CAF40A490D44@AdobeOrg", globalMboxName: "target-global-mbox", globalMboxLocationDomId: "", globalMboxAutoCreate: true, experienceManagerPluginUrl: "//cdn.tt.omtrdc.net/cdn/target.js", siteCatalystPluginName: "tt", mboxVersion: 59, mboxIsSupportedFunction: function() { return true; }, parametersFunction: function() { return ""; }, cookieDomainFunction: function() { return mboxCookiePageDomain(); } }, c: { d: "mboxPage", e: "mboxMCGVID", f: "mboxMCGLH", g: "mboxAAMB", h: "mboxMCAVID", i: "mboxMCSDID", j: "mboxCount", k: "mboxHost", l: "mboxFactoryId", m: "mboxPC", n: "screenHeight", o: "screenWidth", p: "browserWidth", q: "browserHeight", r: "browserTimeOffset", s: "colorDepth", t: "mboxXDomain", u: "mboxURL", v: "mboxReferrer", w: "mboxVersion", x: "mbox", y: "mboxId", z: "mboxDOMLoaded", A: "mboxTime", B: "scPluginVersion" }, C: { D: "mboxDisable", E: "mboxSession", F: "mboxEnv", G: "mboxDebug" }, H: { D: "disable", E: "session", m: "PC", I: "level", J: "check", G: "debug", K: "em-disabled", L: "mboxEdgeServer" }, M: { N: "default", O: "mbox", P: "mboxImported-", Q: 60000, R: "mboxDefault", S: "mboxMarker-", T: 250, B: 1, U: "mboxedge", V: "tt.omtrdc.net" } }}());TNT.a.W = {};(function(X) { var Y = {}.toString; function Z(_) { return _ === void(0); } function ab(_) { return _ === null; } function bb(_) { if (Z(_) || ab(_)) { return true; } return _.length === 0; } function cb(_) { return Y.call(_) === '[object Function]'; } function db(_) { return Y.call(_) === '[object Array]'; } function eb(_) { return Y.call(_) === '[object String]'; } function fb(_) { return Y.call(_) === '[object Object]'; } function gb(hb, ib) { var jb = hb.length, kb = -1; while (++kb < jb) { ib(hb[kb]); } } X.Z = Z; X.ab = ab; X.bb = bb; X.cb = cb; X.db = db; X.eb = eb; X.fb = fb; X.gb = gb;}(TNT.a.W));mboxUrlBuilder = function(lb, mb) { this.lb = lb; this.mb = mb; this.nb = []; this.ob = function(u) { return u; }; this.pb = null;};mboxUrlBuilder.prototype = { constructor: mboxUrlBuilder, addNewParameter: function (qb, _) { this.nb.push({name: qb, value: _}); return this; }, addParameterIfAbsent: function (qb, _) { if (!_) { return; } for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; if (sb.name === qb) { return this; } } this.checkInvalidCharacters(qb); return this.addNewParameter(qb, _); }, addParameter: function(qb, _) { this.checkInvalidCharacters(qb); for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; if (sb.name === qb) { sb.value = _; return this; } } return this.addNewParameter(qb, _); }, addParameters: function(nb) { if (!nb) { return this; } for (var rb = 0; rb < nb.length; rb++) { var tb = nb[rb]; var ub = tb.indexOf('='); if (ub === -1 || ub === 0) { continue; } this.addParameter(tb.substring(0, ub), tb.substring(ub + 1, tb.length)); } return this; }, setServerType: function(vb) { this.wb = vb; }, setBasePath: function(pb) { this.pb = pb; }, setUrlProcessAction: function(xb) { this.ob = xb; }, buildUrl: function() { var yb = TNT.a.zb(this.lb), Ab = this.pb ? this.pb : '/m2/' + this.mb + '/mbox/' + this.wb, Bb = document.location.protocol == 'file:' ? 'http:' : document.location.protocol, u = Bb + "//" + yb + Ab, Cb = []; for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; Cb.push(encodeURIComponent(sb.name) + '=' + encodeURIComponent(sb.value)); } u += u.indexOf('?') != -1 ? '&' + Cb.join('&') : '?' + Cb.join('&'); return this.Db(this.ob(u)); }, getParameters: function() { return this.nb; }, setParameters: function(nb) { this.nb = nb; }, clone: function() { var Eb = new mboxUrlBuilder(this.lb, this.mb); Eb.setServerType(this.wb); Eb.setBasePath(this.pb); Eb.setUrlProcessAction(this.ob); for (var rb = 0; rb < this.nb.length; rb++) { Eb.addParameter(this.nb[rb].name, this.nb[rb].value); } return Eb; }, Db: function(Fb) { return Fb.replace(/\"/g, '&quot;').replace(/>/g, '&gt;'); }, checkInvalidCharacters: function (qb) { var Gb = new RegExp('(\'|")'); if (Gb.exec(qb)) { throw "Parameter '" + qb + "' contains invalid characters"; } }};mboxStandardFetcher = function() { };mboxStandardFetcher.prototype = { constructor: mboxStandardFetcher, getType: function() { return 'standard'; }, fetch: function(Hb) { Hb.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + Hb.buildUrl() + '"><' + '\/scr' + 'ipt>'); }, cancel: function() { }};mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype = { constructor: mboxAjaxFetcher, getType: function() { return 'ajax'; }, fetch: function(Hb) { Hb.setServerType(this.getType()); var Ib = document.getElementsByTagName('head')[0], Jb = document.createElement('script'); Jb.src = Hb.buildUrl(); Ib.appendChild(Jb); }, cancel: function() {}};(function(X){ function Kb() {} Kb.prototype = { constructor: Kb, getType: function() { return 'ajax'; }, fetch: function(Hb) { Hb.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + Hb.buildUrl() +'"><' + '\/scr' + 'ipt>'); }, cancel: function() { } }; X.Kb = Kb;}(TNT.a));mboxMap = function() { this.Lb = {}; this.Mb = [];};mboxMap.prototype = { constructor: mboxMap, put: function(Nb, _) { if (!this.Lb[Nb]) { this.Mb[this.Mb.length] = Nb; } this.Lb[Nb] = _; }, get: function(Nb) { return this.Lb[Nb]; }, remove: function(Nb) { var Ob = []; this.Lb[Nb] = undefined; for (var i = 0; i < this.Mb.length; i++) { if (this.Mb[i] !== Nb) { Ob.push(this.Mb[i]); } } this.Mb = Ob; }, each: function(xb) { for (var rb = 0; rb < this.Mb.length; rb++ ) { var Nb = this.Mb[rb]; var _ = this.Lb[Nb]; if (_) { var Pb = xb(Nb, _); if (Pb === false) { break; } } } }, isEmpty: function() { return this.Mb.length === 0; }};mboxList = function() { this.Qb = [];};mboxList.prototype = { constructor: mboxList, add: function(Rb) { if (!Rb) { return; } this.Qb.push(Rb); }, get: function(x) { var Pb = new mboxList(); for (var rb = 0; rb < this.Qb.length; rb++) { var Rb = this.Qb[rb]; if (Rb.getName() === x) { Pb.add(Rb); } } return Pb; }, getById: function(Sb) { return this.Qb[Sb]; }, length: function() { return this.Qb.length; }, each: function(xb) { var W = TNT.a.W; if (!W.cb(xb)) { throw 'Action must be a function, was: ' + typeof(xb); } for (var rb = 0; rb < this.Qb.length; rb++) { xb(this.Qb[rb]); } }};mboxSignaler = function(Tb) { this.Tb = Tb;};mboxSignaler.prototype = { constructor: mboxSignaler, signal: function(Ub, x ) { if (!this.Tb.isEnabled()) { return; } var Vb = mboxSignaler.Wb(), Xb = this.Yb(this.Tb.Zb(x)); Vb.appendChild(Xb); var _b = [].slice.call(arguments, 1), Rb = this.Tb.create(x, _b, Xb), Hb = Rb.getUrlBuilder(); Hb.addParameter(TNT.a.c.d, mboxGenerateId()); Rb.setFetcher(new mboxAjaxFetcher()); Rb.load(); }, Yb: function(ac) { var Pb = document.createElement('div'); Pb.id = ac; Pb.style.visibility = 'hidden'; Pb.style.display = 'none'; return Pb; }};mboxSignaler.Wb = function() { return document.body;};mboxLocatorDefault = function(bc) { this.bc = bc; document.write('<div id="' + this.bc + '" style="visibility:hidden;display:none">&nbsp;<\/div>');};mboxLocatorDefault.prototype = { constructor: mboxLocatorDefault, locate: function() { var cc = 1, dc = document.getElementById(this.bc); while (dc) { if (dc.nodeType === cc && dc.className === 'mboxDefault') { return dc; } dc = dc.previousSibling; } return null; }, force: function() { var ec = document.getElementById(this.bc), fc = document.createElement('div'); fc.className = 'mboxDefault'; if (ec) { ec.parentNode.insertBefore(fc, ec); } return fc; }};mboxLocatorNode = function(dc) { this.dc = dc;};mboxLocatorNode.prototype = { constructor: mboxLocatorNode, locate: function() { return typeof(this.dc) === 'string' ? document.getElementById(this.dc) : this.dc; }, force: function() { return null; }};mboxOfferContent = function() { this.gc = function() {};};mboxOfferContent.prototype = { constructor: mboxOfferContent, show: function (Rb) { var Pb = Rb.showContent(document.getElementById(Rb.getImportName())); if (Pb === 1) { this.gc(); } return Pb; }, setOnLoad: function(gc) { this.gc = gc; }};mboxOfferAjax = function(hc) { this.hc = hc; this.gc = function() {};};mboxOfferAjax.prototype = { constructor: mboxOfferAjax, setOnLoad: function(gc) { this.gc = gc; }, show: function(Rb) { var ic = document.createElement('div'), Pb; ic.id = Rb.getImportName(); ic.innerHTML = this.hc; Pb = Rb.showContent(ic); if (Pb === 1) { this.gc(); } return Pb; }};mboxOfferDefault = function() { this.gc = function() {};};mboxOfferDefault.prototype = { constructor: mboxOfferDefault, show: function(Rb) { var Pb = Rb.hide(); if (Pb === 1) { this.gc(); } return Pb; }, setOnLoad: function(gc) { this.gc = gc; }};mboxCookieManager = function(qb, jc) { this.qb = qb; this.kc = TNT.a.H.J; this.lc = TNT.a.b.crossDomainXOnly; this.mc = TNT.a.H.D; this.nc = TNT.a.b.usePersistentCookies; this.oc = new mboxMap(); this.jc = jc === '' || jc.indexOf('.') === -1 ? '' : '; domain=' + jc; this.loadCookies();};mboxCookieManager.prototype = { constructor: mboxCookieManager, isEnabled: function() { this.setCookie(this.kc, 'true', 60); this.loadCookies(); return this.getCookie(this.kc) == 'true'; }, setCookie: function(qb, _, pc) { if (typeof qb == 'undefined' || typeof _ == 'undefined' || typeof pc == 'undefined') { return; } var qc = Math.ceil(pc + new Date().getTime() / 1000), rc = mboxCookieManager.sc(qb, encodeURIComponent(_), qc); this.oc.put(qb, rc); this.saveCookies(); }, getCookie: function(qb) { var rc = this.oc.get(qb); return rc ? decodeURIComponent(rc.value) : null; }, deleteCookie: function(qb) { this.oc.remove(qb); this.saveCookies(); }, getCookieNames: function(tc) { var uc = []; this.oc.each(function(qb, rc) { if (qb.indexOf(tc) === 0) { uc[uc.length] = qb; } }); return uc; }, saveCookies: function() { var vc = this, wc = [], xc = 0; this.oc.each(function(qb, rc) { if(!vc.lc || qb === vc.mc) { wc[wc.length] = mboxCookieManager.yc(rc); if (xc < rc.expireOn) { xc = rc.expireOn; } } }); var zc = new Date(xc * 1000); var Cb = []; Cb.push(this.qb, '=', wc.join('|')); if (vc.nc) { Cb.push('; expires=', zc.toGMTString()); } Cb.push('; path=/', this.jc); document.cookie = Cb.join(""); }, loadCookies: function() { var Ac = mboxCookieManager.Bc(this.qb), Cc = mboxCookieManager.Dc(Ac), Ec = Math.ceil(new Date().getTime() / 1000); this.oc = new mboxMap(); for (var rb = 0; rb < Cc.length; rb++) { var rc = mboxCookieManager.Fc(Cc[rb]); if (Ec > rc.expireOn) { continue; } this.oc.put(rc.name, rc); } }};mboxCookieManager.yc = function(rc) { return rc.name + '#' + rc.value + '#' + rc.expireOn;};mboxCookieManager.Fc = function(Y) { var Cb = Y.split('#'); return mboxCookieManager.sc(Cb[0], Cb[1], Cb[2]);};mboxCookieManager.sc = function(qb, _, qc) { return {name: qb, value: _, expireOn: qc};};mboxCookieManager.Bc = function(qb) { var result = new RegExp('(^|; )' + encodeURIComponent(qb) + '=([^;]*)').exec(document.cookie); return result ? result[2] : null;};mboxCookieManager.Dc = function(Y) { if (!Y) { return []; } return Y.split('|');};mboxSession = function(Gc, Hc, Ic, Jc, Kc) { var Lc = window.mboxForceSessionId; this.Ic = Ic; this.Jc = Jc; this.Kc = Kc; this.ac = typeof(Lc) !== 'undefined' ? Lc : mboxGetPageParameter(Hc, true); this.ac = this.ac || Kc.getCookie(Ic) || Gc; this.Kc.setCookie(Ic, this.ac, Jc);};mboxSession.prototype = { constructor: mboxSession, getId: function() { return this.ac; }, forceId: function(Mc) { this.ac = Mc; this.Kc.setCookie(this.Ic, this.ac, this.Jc); }};mboxPC = function(Ic, Jc, Kc) { var Nc = window.mboxForcePCId; this.Ic = Ic; this.Jc = Jc; this.Kc = Kc; this.ac = typeof(Nc) != 'undefined' ? Nc: Kc.getCookie(Ic); if (this.ac) { Kc.setCookie(Ic, this.ac, Jc); }};mboxPC.prototype = { constructor: mboxPC, getId: function() { return this.ac; }, forceId: function(Mc) { if (this.ac === Mc) { return false; } this.ac = Mc; this.Kc.setCookie(this.Ic, this.ac, this.Jc); return true; }};(function(X, W, H, b, M) { var Oc = new RegExp(".*\\.(\\d+)_\\d+"); function zb(Qc) { var Rc = Oc.exec(Qc); if (Rc && Rc.length === 2) { return M.U + Rc[1] + M.V; } return ''; } function Sc(Kc, Tc) { var yb = zb(Tc); if (!W.bb(yb)) { Kc.setCookie(H.L, yb, b.overrideMboxEdgeServerTimeout); } } function Uc(Vc, Kc) { this.Vc= Vc; this.Kc = Kc; Sc(Kc, Vc.getId()); } Uc.prototype = { constructor: Uc, getId: function() { return this.Vc.getId(); }, forceId: function(Mc) { if (!this.Vc.forceId(Mc)) { return false; } Sc(this.Kc, Mc); return true; } }; X.Uc = Uc;}(TNT.a, TNT.a.W, TNT.a.H, TNT.a.b, TNT.a.M));mboxGetPageParameter = function(qb, Wc) { Wc = Wc || false; var Xc; if (Wc) { Xc = new RegExp("\\?[^#]*" + qb + "=([^\&;#]*)", "i"); } else { Xc = new RegExp("\\?[^#]*" + qb + "=([^\&;#]*)"); } var Pb = null; var Yc = Xc.exec(document.location); if (Yc && Yc.length >= 2) { Pb = Yc[1]; } return Pb;};mboxCookiePageDomain = function() { var jc = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var Zc = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!Zc.exec(jc)) { var _c = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(jc); if (_c) { jc = _c[0]; if (jc.indexOf("www.") === 0) { jc=jc.substr(4); } } } return jc ? jc: "";};mboxShiftArray = function(ad) { var Pb = []; for (var rb = 1; rb < ad.length; rb++) { Pb[Pb.length] = ad[rb]; } return Pb;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;};TNT.a.bd = (function() { var cd = [], dd = 0, ed = []; function fd(Sb, _b) { dd += 1; cd[Sb] = _b; gd(); } function gd() { var jb = ed.length, kb = -1, hd; if (dd !== cd.length || !ed.length) { return; } while (++kb < jb) { hd = ed[kb]; hd.fn.apply(hd.ctx, cd); } } return { id: function () { var Sb = cd.length; cd[cd.length] = null; return function () { fd(Sb, [].slice.call(arguments)); }; }, jd: function (cb, context) { ed.push({fn: cb, ctx: context}); gd(); } };}());mbox = function(qb, ac, Hb, kd, ld, Tb) { this.md = null; this.nd = 0; this.od = kd; this.ld = ld; this.pd = null; this.qd = new mboxOfferContent(); this.fc = null; this.Hb = Hb; this.message = ''; this.rd = {}; this.sd = 0; this.td = 5; this.ac = ac; this.qb = qb; this.ud(); Hb.addParameter(TNT.a.c.x, qb); Hb.addParameter(TNT.a.c.y, ac); this.vd = function() {}; this.gc = function() {}; this.wd = null; this.xd = document.documentMode >= 10 && !Tb.isDomLoaded(); if (this.xd) { this.yd = TNT.a.nestedMboxes; this.yd.push(this.qb); }};mbox.prototype.getId = function() { return this.ac;};mbox.prototype.ud = function() { var maxLength = TNT.a.M.T; if (this.qb.length > maxLength) { throw "Mbox Name " + this.qb + " exceeds max length of " + maxLength + " characters."; } else if (this.qb.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.qb + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.qb;};mbox.prototype.getParameters = function() { var nb = this.Hb.getParameters(); var Pb = []; for (var rb = 0; rb < nb.length; rb++) { if (nb[rb].name.indexOf('mbox') !== 0) { Pb[Pb.length] = nb[rb].name + '=' + nb[rb].value; } } return Pb;};mbox.prototype.setOnLoad = function(xb) { this.gc = xb; return this;};mbox.prototype.setMessage = function(zd) { this.message = zd; return this;};mbox.prototype.setOnError = function(vd) { this.vd = vd; return this;};mbox.prototype.setFetcher = function(Ad) { if (this.pd) { this.pd.cancel(); } this.pd = Ad; return this;};mbox.prototype.getFetcher = function() { return this.pd;};mbox.prototype.load = function(nb) { var Hb = this.Hb; if (this.pd === null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); this.nd = 0; if (nb && nb.length > 0) { Hb = this.Hb.clone().addParameters(nb); } this.pd.fetch(Hb); var vc = this; this.Bd = setTimeout(function() { vc.vd('browser timeout', vc.pd.getType()); }, TNT.a.b.mboxTimeout); this.setEventTime("load.end"); return this;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate() && this.sd < this.td) { var vc = this; setTimeout(function() { vc.loaded(); }, TNT.a.b.mboxLoadedTimeout); }};mbox.prototype.activate = function() { if (this.nd) { return this.nd; } this.setEventTime('activate' + (++this.sd) + '.start'); if (this.xd && this.yd[this.yd.length - 1] !== this.qb) { return this.nd; } if (this.show()) { this.cancelTimeout(); this.nd = 1; } this.setEventTime('activate' + this.sd + '.end'); if (this.xd) { this.yd.pop(); } return this.nd;};mbox.prototype.isActivated = function() { return this.nd;};mbox.prototype.setOffer = function(qd) { var Cd = qd && qd.show && qd.setOnLoad; if (!Cd) { throw 'Invalid offer'; } var Dd = TNT.a.b.globalMboxName === this.qb; Dd = Dd && qd instanceof mboxOfferDefault; Dd = Dd && this.pd !== null; Dd = Dd && this.pd.getType() === 'ajax'; if (!Dd) { this.qd = qd; return this; } var Ed = this.qd.gc; this.qd = qd; this.qd.setOnLoad(Ed); return this;};mbox.prototype.getOffer = function() { return this.qd;};mbox.prototype.show = function() { this.setEventTime('show.start'); var Pb = this.qd.show(this); this.setEventTime(Pb == 1 ? "show.end.ok" : "show.end"); return Pb;};mbox.prototype.showContent = function(hc) { if (!mbox.Fd(hc)) { return 0; } this.fc = mbox.Gd(this, this.fc); if (this.fc === null) { return 0; } if (!mbox.Hd(document.body, this.fc)) { return 0; } if (this.fc === hc) { this.Id(this.fc); this.gc(); return 1; } this.Jd(this.fc); this.Jd(hc); mbox.Kd(this, hc); this.Id(this.fc); this.gc(); return 1;};mbox.Fd = function(hc) { return hc !== undefined && hc !== null;};mbox.Hd = function(Ld, Md) { var DOCUMENT_POSITION_CONTAINED_BY = 16; var Nd = Ld.contains !== undefined; if (Nd) { return Ld !== Md && Ld.contains(Md); } else { return Boolean(Ld.compareDocumentPosition(Md) & DOCUMENT_POSITION_CONTAINED_BY); }};mbox.Gd = function(Rb, fc) { if (fc !== undefined && fc !== null && mbox.Hd(document.body, fc)) { return fc; } return Rb.getDefaultDiv();};mbox.Kd = function(Rb, Od) { Rb.fc.parentNode.replaceChild(Od, Rb.fc); Rb.fc = Od;};mbox.prototype.hide = function() { this.setEventTime('hide.start'); var Pb = this.showContent(this.getDefaultDiv()); this.setEventTime(Pb == 1 ? 'hide.end.ok' : 'hide.end.fail'); return Pb;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (!this.getDefaultDiv()) { if (this.od.force()) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.Bd) { clearTimeout(this.Bd); } if (this.pd) { this.pd.cancel(); }};mbox.prototype.getDiv = function() { return this.fc;};mbox.prototype.getDefaultDiv = function() { if (this.wd === null) { this.wd = this.od.locate(); } return this.wd;};mbox.prototype.setEventTime = function(Pd) { this.rd[Pd] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.rd;};mbox.prototype.getImportName = function() { return this.ld;};mbox.prototype.getURL = function() { return this.Hb.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.Hb;};mbox.prototype.Qd = function(fc) { return fc.style.display != 'none';};mbox.prototype.Id = function(fc) { this.Rd(fc, true);};mbox.prototype.Jd = function(fc) { this.Rd(fc, false);};mbox.prototype.Rd = function(fc, Sd) { fc.style.visibility = Sd ? "visible" : "hidden"; fc.style.display = Sd ? "block" : "none";};mbox.prototype.Td = function() { this.xd = false;};mbox.prototype.relocateDefaultDiv = function() { this.wd = this.od.locate();};mboxFactory = function(yb, mb, Ud) { var Vd = TNT.a; var b = Vd.b; var H = Vd.H; var C = Vd.C; var M = Vd.M; var Wd = b.mboxVersion; this.Xd = false; this.Ud = Ud; this.Qb = new mboxList(); mboxFactories.put(Ud, this); this.Yd = b.mboxIsSupportedFunction() && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined'; this.Zd = this.Yd && mboxGetPageParameter(C.D, true) === null; var _d = Ud == M.N; var Ic = M.O + (_d ? '' : ('-' + Ud)); this.Kc = new mboxCookieManager(Ic, b.cookieDomainFunction()); if (!b.crossDomainXOnly) { this.Zd = this.Zd && this.Kc.isEnabled(); } this.Zd = this.Zd && TNT.a.W.ab(this.Kc.getCookie(H.D)) && TNT.a.W.ab(this.Kc.getCookie(H.K)); if (this.isAdmin()) { this.enable(); } this.ae(); this.be = mboxGenerateId(); this.ce = mboxScreenHeight(); this.de = mboxScreenWidth(); this.ee = mboxBrowserWidth(); this.fe = mboxBrowserHeight(); this.ge = mboxScreenColorDepth(); this.he = mboxBrowserTimeOffset(); this.ie = new mboxSession(this.be, C.E, H.E, b.sessionExpirationTimeout, this.Kc); var Vc = new mboxPC(H.m, b.tntIdLifetime, this.Kc); this.je = b.overrideMboxEdgeServer ? new Vd.Uc(Vc, this.Kc) : Vc; this.Hb = new mboxUrlBuilder(yb, mb); this.ke(this.Hb, _d, Wd); this.le = new Date().getTime(); this.me = this.le; var vc = this; this.addOnLoad(function() { vc.me = new Date().getTime(); }); if (this.Yd) { this.addOnLoad(function() { vc.Xd = true; vc.getMboxes().each(function(Rb) { Rb.Td(); Rb.setFetcher(new mboxAjaxFetcher()); Rb.finalize(); }); TNT.a.nestedMboxes = []; }); if (this.Zd) { this.limitTraffic(b.trafficLevelPercentage, b.trafficDuration); this.ne(); this.oe = new mboxSignaler(this); } else { if (!b.isProduction) { if (this.isAdmin()) { if (!this.isEnabled()) { alert("mbox disabled, probably due to timeout\n" + "Reset your cookies to re-enable\n(this message will only appear in administrative mode)"); } else { alert("It looks like your browser will not allow " + b.companyName + " to set its administrative cookie. To allow setting the" + " cookie please lower the privacy settings of your browser.\n" + "(this message will only appear in administrative mode)"); } } } } }};mboxFactory.prototype.forcePCId = function(Mc) { if (!TNT.a.b.clientTntIdSupport) { return; } if (this.je.forceId(Mc)) { this.ie.forceId(mboxGenerateId()); }};mboxFactory.prototype.forceSessionId = function(Mc) { if (!TNT.a.b.clientSessionIdSupport) { return; } this.ie.forceId(Mc);};mboxFactory.prototype.isEnabled = function() { return this.Zd;};mboxFactory.prototype.getDisableReason = function() { return this.Kc.getCookie(TNT.a.H.D);};mboxFactory.prototype.isSupported = function() { return this.Yd;};mboxFactory.prototype.disable = function(pc, pe) { if (typeof pc == 'undefined') { pc = 60 * 60; } if (typeof pe == 'undefined') { pe = 'unspecified'; } if (!this.isAdmin()) { this.Zd = false; this.Kc.setCookie(TNT.a.H.D, pe, pc); }};mboxFactory.prototype.enable = function() { this.Zd = true; this.Kc.deleteCookie(TNT.a.H.D);};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf(TNT.a.C.F) != -1;};mboxFactory.prototype.limitTraffic = function(qe, pc) { if (TNT.a.b.trafficLevelPercentage != 100) { if (qe == 100) { return; } var re = true; if (parseInt(this.Kc.getCookie(TNT.a.H.I)) != qe) { re = (Math.random() * 100) <= qe; } this.Kc.setCookie(TNT.a.H.I, qe, pc); if (!re) { this.disable(60 * 60, 'limited by traffic'); } }};mboxFactory.prototype.addOnLoad = function(se) { if (this.isDomLoaded()) { se(); } else { var te = false; var ue = function() { if (te) { return; } te = true; se(); }; this.ve.push(ue); if (this.isDomLoaded() && !te) { ue(); } }};mboxFactory.prototype.getEllapsedTime = function() { return this.me - this.le;};mboxFactory.prototype.getEllapsedTimeUntil = function(A) { return A - this.le;};mboxFactory.prototype.getMboxes = function() { return this.Qb;};mboxFactory.prototype.get = function(x, y) { return this.Qb.get(x).getById(y || 0);};mboxFactory.prototype.update = function(x, nb) { var Vd = TNT.a, c = Vd.c; if (!this.isEnabled()) { return; } var vc = this; if (!this.isDomLoaded()) { this.addOnLoad(function() { vc.update(x, nb); }); return; } if (this.Qb.get(x).length() === 0) { throw "Mbox " + x + " is not defined"; } this.Qb.get(x).each(function(Rb) { var Hb = Rb.getUrlBuilder(); Hb.addParameter(c.d, mboxGenerateId()); vc.we(Hb, x); vc.xe(Hb); vc.ye(Hb, x); Rb.load(nb); });};mboxFactory.prototype.setVisitorIdParameters = function(Hb, x) { this.we(Hb, x);};mboxFactory.prototype.create = function(x, nb, ze) { var Rb = this.Ae(x, nb, ze); if (Rb) { this.we(Rb.getUrlBuilder(), x); } return Rb;};mboxFactory.prototype.Be = function(x, nb, ze) { return this.Ae(x, nb, ze);};mboxFactory.prototype.Ae = function(x, nb, ze) { if (!this.isSupported()) { return null; } var Ce = new Date(); var A = Ce.getTime() - (Ce.getTimezoneOffset() * TNT.a.M.Q); var Hb = this.Hb.clone(); Hb.addParameter(TNT.a.c.j, this.Qb.length() + 1); Hb.addParameter(TNT.a.c.A, A); Hb.addParameters(nb); this.xe(Hb); this.ye(Hb, x); var y, od, Rb; if (ze) { od = new mboxLocatorNode(ze); } else { if (this.Xd) { throw 'The page has already been loaded, can\'t write marker'; } od = new mboxLocatorDefault(this.Zb(x)); } try { y = this.Qb.get(x).length(); Rb = new mbox(x, y, Hb, od, this.De(x), this); if (this.Zd) { Rb.setFetcher(this.Xd ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } var vc = this; Rb.setOnError(function(zd, vb) { Rb.setMessage(zd); Rb.activate(); if (!Rb.isActivated()) { vc.disable(TNT.a.b.mboxFactoryDisabledTimeout, zd); window.location.reload(false); } }); this.Qb.add(Rb); } catch (Ee) { this.disable(); throw 'Failed creating mbox "' + x + '", the error was: ' + Ee; } return Rb;};mboxFactory.prototype.xe = function(Hb) { var m = this.je.getId(); if (m) { Hb.addParameter(TNT.a.c.m, m); }};mboxFactory.prototype.we = function(Hb, x) { var Vd = TNT.a, Fe = Vd.b.imsOrgId, mb = Vd.b.clientCode, Ge = Vd.c.i, i = Vd.He(Fe, mb, x); if (i) { Hb.addParameter(Ge, i); }};mboxFactory.prototype.ye = function(Hb, x) { var Ie = !TNT.isAutoCreateGlobalMbox() && TNT.getGlobalMboxName() === x; if (Ie) { Hb.addParameters(TNT.getTargetPageParameters()); }};mboxFactory.prototype.getCookieManager = function() { return this.Kc;};mboxFactory.prototype.getPageId = function() { return this.be;};mboxFactory.prototype.getPCId = function() { return this.je;};mboxFactory.prototype.getSessionId = function() { return this.ie;};mboxFactory.prototype.getSignaler = function() { return this.oe;};mboxFactory.prototype.getUrlBuilder = function() { return this.Hb;};mboxFactory.prototype.Je = function(x) { return this.Ud + '-' + x + '-' + this.Qb.get(x).length();};mboxFactory.prototype.Zb = function(x) { return TNT.a.M.S + this.Je(x);};mboxFactory.prototype.De = function(x) { return TNT.a.M.P + this.Je(x);};mboxFactory.prototype.ke = function(Hb, _d, Wd) { Hb.addParameter(TNT.a.c.k, document.location.hostname); Hb.addParameter(TNT.a.c.d, this.be); Hb.addParameter(TNT.a.c.n, this.ce); Hb.addParameter(TNT.a.c.o, this.de); Hb.addParameter(TNT.a.c.p, this.ee); Hb.addParameter(TNT.a.c.q, this.fe); Hb.addParameter(TNT.a.c.r, this.he); Hb.addParameter(TNT.a.c.s, this.ge); Hb.addParameter(TNT.a.C.E, this.ie.getId()); if (!_d) { Hb.addParameter(TNT.a.c.l, this.Ud); } this.xe(Hb); if (TNT.a.b.crossDomainEnabled) { Hb.addParameter(TNT.a.c.t, TNT.a.b.crossDomain); } var c = TNT.getClientMboxExtraParameters(); if (c) { Hb.addParameters(c.split('&')); } Hb.setUrlProcessAction(function(u) { if (TNT.a.b.passPageParameters) { u += '&'; u += TNT.a.c.u; u += '=' + encodeURIComponent(document.location); var v = encodeURIComponent(document.referrer); if (u.length + v.length < 2000) { u += '&'; u += TNT.a.c.v; u += '=' + v; } } u += '&'; u += TNT.a.c.w; u += '=' + Wd; return u; });};mboxFactory.prototype.ne = function() { document.write('<style>.' + TNT.a.M.R + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.Xd;};mboxFactory.prototype.ae = function() { if (this.ve) { return; } this.ve = []; var vc = this; (function() { var Ke = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var Le = false; var Me = function() { if (Le) { return; } Le = true; for (var i = 0; i < vc.ve.length; ++i) { vc.ve[i](); } }; if (document.addEventListener) { document.addEventListener(Ke, function() { document.removeEventListener(Ke, arguments.callee, false); Me(); }, false); window.addEventListener("load", function(){ document.removeEventListener("load", arguments.callee, false); Me(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(Ke, function() { if (document.readyState === 'complete') { document.detachEvent(Ke, arguments.callee); Me(); } }); } else { var Ne = function() { try { document.documentElement.doScroll('left'); Me(); } catch (Oe) { setTimeout(Ne, 13); } }; Ne(); } } if (document.readyState === "complete") { Me(); } })();};(function(X) { function Pe(Qe, Ic, pc, Kc) { if (Qe.targetJSLoaded) { return; } Kc.setCookie(Ic, true, pc); window.location.reload(); } function Re(b, H, Kc) { var Se = '_AT', Ue = 50, Ic = H.K, pc = b.experienceManagerDisabledTimeout, md = b.experienceManagerTimeout, u = b.experienceManagerPluginUrl, Ve = function(We) {}, Xe = function(We) { setTimeout(function() { window[Se].applyWhenReady(We); }, Ue); }; if (Se in window) { return; } window[Se] = {}; if (Kc.getCookie(Ic) !== 'true') { document.write('<scr' + 'ipt src="' + u + '"><\/sc' + 'ript>'); window[Se].applyWhenReady = Xe; setTimeout(function() { Pe(window[Se], Ic, pc, Kc); }, md); } else { window[Se].applyWhenReady = Ve; } } X.Re = Re;}(TNT.a));(function(X, W, c, bd) { var Ye = new RegExp("\\|MCMID\\|"), Ze = false, _e = [], af = [], bf = []; function cf(df) { var ef, ff = function(Nb) { return 'vst.' + Nb; }; if (!W.cb(df.getCustomerIDs)) { return []; } ef = df.getCustomerIDs(); if (!W.fb(ef)) { return []; } return X.gf(ef, [], ff); } function hf(df, jf, Nb) { var kf; if (!W.cb(df[jf])) { return; } kf = bd.id(); df[jf](function(_) { kf({key:Nb, value: _}); }, true); } function lf(df, jf, Nb) { var _; if (!W.cb(df[jf])) { return; } _ = df[jf](); if (!W.bb(_)) { _e.push({key: Nb, value: _}); } } function mf(df, nf) { nf(df, 'getMarketingCloudVisitorID', c.e); nf(df, 'getAudienceManagerBlob', c.g); nf(df, 'getAnalyticsVisitorID', c.h); nf(df, 'getAudienceManagerLocationHint', c.f); } function of(df) { mf(df, hf); } function pf(df) { mf(df, lf); } function qf(_b) { W.gb(_b, function(hb) { _e.push(hb[0]); }); } function rf(sf) { return !W.bb(sf.value); } function tf(sf, Hb) { if (!rf(sf)) { return; } Hb.addParameter(sf.key, sf.value); } function uf(Hb) { W.gb(_e, function(sf) { tf(sf, Hb); }); } function vf(Tb, sf) { var Rb = sf.mbox; if (!Rb) { return; } switch (sf.type) { case 'created': Rb.setFetcher(new mboxAjaxFetcher()); Rb.load(); break; case 'defined': Tb.update(Rb.getName(), sf.params); break; } } function wf(Tb, xf) { bd.jd(function() { Ze = false; qf([].slice.call(arguments)); uf(Tb.getUrlBuilder()); W.gb(af, function(sf) { uf(sf.mbox.getUrlBuilder()); vf(Tb, sf); }); setTimeout(yf, xf); }); } function zf(Fe) { var df; if (W.bb(Fe) || W.Z(window.Visitor) || !W.cb(window.Visitor.getInstance)) { return null; } df = window.Visitor.getInstance(Fe); if (W.Z(df) || W.ab(df) || !df.isAllowed()) { return null; } return df; } function Af(df) { var Bf = df.cookieRead(df.cookieName); if (W.bb(Bf)) { return true; } return !Ye.test(Bf); } function Cf(Tb, b) { var Fe = b.imsOrgId, Df = b.visitorApiTimeout, xf = b.visitorApiPageDisplayTimeout, Hb = Tb.getUrlBuilder(), df; if (!Tb.isEnabled()) { return; } df = zf(Fe); if (W.ab(df) || W.Z(df.cookieName) || !W.cb(df.cookieRead)) { return; } Hb.addParameters(cf(df)); if (Af(df)) { Ze = true; if (!W.Z(df.loadTimeout)) { df.loadTimeout = Df; } Ef(); Ff(); of(df); wf(Tb, xf); } else { Ze = false; pf(df); uf(Hb); } } function Gf() { return Ze; } function Hf(sf) { switch (sf.type) { case 'created': af.push(sf); break; case 'defined': bf.push(sf); break; } } function If(x) { var jb = bf.length, kb = -1; while(++kb < jb) { if (bf[kb].mbox.getName() === x) { return true; } } return false; } function Jf(Tb, x, c) { var Kf = _e.length > 0, Lf = [], jb = bf.length, kb = -1, Hb, sf; while(++kb < jb) { sf = bf[kb]; Hb = sf.mbox.getUrlBuilder(); if (sf.mbox.getName() !== x) { Lf.push(sf); continue; } if (!Kf) { sf.params = c; af.push(sf); continue; } Hb.addParameters(c); uf(Hb); vf(Tb, sf); } bf = Lf; } function He(Fe, mb, x) { var df = zf(Fe); if (W.ab(df) || !W.cb(df.getSupplementalDataID)) { return ''; } return df.getSupplementalDataID('mbox:' + mb + ':' + x); } function Ff() { document.documentElement.style.display = 'none'; document.documentElement.style.visibility = 'hidden'; } function yf() { document.documentElement.style.display = 'block'; document.documentElement.style.visibility = 'visible'; } function Mf() { if (window.addEventListener) { window.addEventListener('error', function Nf() { yf(); window.removeEventListener('error', Nf); }); } } function Of() { if (window.attachEvent) { window.attachEvent('onerror', function Pf() { yf(); window.detachEvent('onerror', Pf); }); } } function Ef() { Mf(); Of(); } X.zf = zf; X.Cf = Cf; X.Gf = Gf; X.Hf = Hf; X.If = If; X.Jf = Jf; X.He = He;}(TNT.a, TNT.a.W, TNT.a.c, TNT.a.bd));(function(X, a, W, b, c, M){ function Qf() { return b.globalMboxName; } function Rf() { return b.globalMboxLocationDomId; } function Sf() { return b.globalMboxAutoCreate; } function Tf() { return b.parametersFunction(); } function Uf() { var cc = 1, Vf = document.getElementsByTagName('script'), dc = Vf[Vf.length - 1]; while (dc) { if (dc.nodeType === cc && dc.className === M.R) { return dc; } dc = dc.previousSibling; } return null; } function Wf(Tb, x, c) { var Vd = TNT.a, ze, Rb; if (Vd.Gf()) { ze = Uf(); Rb = Tb.create( x, c, ze); Vd.Hf({mbox: Rb, type: 'created'}); return Rb; } else { Rb = Tb.create( x, c); } if (Rb && Tb.isEnabled()) { Rb.load(); } return Rb; } function Xf(Tb, ze, x, c) { var Vd = TNT.a, Rb = Tb.Be(x, c, ze); if (Vd.Gf()) { Vd.Hf({mbox: Rb, type: 'defined'}); } return Rb; } function Yf(Tb, x, c) { var Vd = TNT.a; if (Vd.If(x)) { Vd.Jf(Tb, x, c); return; } Tb.update(x, c); } function Zf(Kc, qb) { return Kc.getCookie(qb); } function _f(Kc, qb, _, pc) { Kc.setCookie(qb, _, pc); } function ag(bg) { var Pb = []; var cg = /([^&=]+)=([^&]*)/g; var dg = decodeURIComponent; var Rc = cg.exec(bg); while (Rc) { Pb.push([dg(Rc[1]), dg(Rc[2])].join('=')); Rc = cg.exec(bg); } return Pb; } function gf(eg, Mb, ff) { var Pb = []; for (var Nb in eg) { if (!eg.hasOwnProperty(Nb)) { continue; } var _ = eg[Nb]; if (W.fb(_)) { Mb.push(Nb); Pb = Pb.concat(gf(_, Mb, ff)); Mb.pop(); } else { if (Mb.length > 0) { Pb.push([ff(Mb.concat(Nb).join('.')), _].join('=')); } else { Pb.push([ff(Nb), _].join('=')); } } } return Pb; } function fg() { var gg = window.targetPageParams, ff = function(Nb) { return Nb }; if (!W.cb(gg)) { return []; } var Pb = null; try { Pb = gg(); } catch (hg) {} if (W.ab(Pb)) { return []; } if (W.db(Pb)) { return Pb; } if (W.eb(Pb) && !W.bb(Pb)) { return ag(Pb); } if (W.fb(Pb)) { return gf(Pb, [], ff); } return []; } function ig(Tb) { var jg = Qf(), kg = Rf(), lg = fg(), mg, ng, og; if (!kg) { kg = "mbox-" + jg + "-" + mboxGenerateId(); mg = document.createElement("div"); mg.className = "mboxDefault"; mg.id = kg; mg.style.visibility = "hidden"; mg.style.display = "none"; ng = setInterval(function(){ if (document.body) { clearInterval(ng); document.body.insertBefore(mg, document.body.firstChild); } }, b.bodyPollingTimeout); } og = Tb.create(jg, lg, kg); if (TNT.a.Gf()) { TNT.a.Hf({mbox: og, params: [], type: 'created'}); return; } if (og && Tb.isEnabled()) { if (!Tb.isDomLoaded()) { og.setFetcher(new a.Kb()); } og.load(); } } function pg(Tb, x, nb) { if (!Tb.isEnabled()) { return; } var Ce = new Date(), qg = Ce.getTimezoneOffset() * M.Q, Hb = Tb.getUrlBuilder().clone(); Hb.setBasePath('/m2/' + b.clientCode + '/viztarget'); Hb.addParameter(c.x, x); Hb.addParameter(c.y, 0); Hb.addParameter(c.j, Tb.getMboxes().length() + 1); Hb.addParameter(c.A, Ce.getTime() - qg); Hb.addParameter(c.d, mboxGenerateId()); Hb.addParameter(c.z, Tb.isDomLoaded()); if (nb && nb.length > 0) { Hb.addParameters(nb); } Tb.xe(Hb); Tb.ye(Hb, x); Tb.we(Hb, x); return Hb.buildUrl(); } function rg() { return new mboxMap(); } function sg(tg, mb, Ud) { return new mboxFactory(tg, mb, Ud); } a.Wf = Wf; a.Xf = Xf; a.Yf = Yf; a.pg = pg; a.Zf = Zf; a._f = _f; a.ig = ig; a.rg = rg; a.sg = sg; a.gf = gf; X.getGlobalMboxName = Qf; X.getGlobalMboxLocation = Rf; X.isAutoCreateGlobalMbox = Sf; X.getClientMboxExtraParameters = Tf; X.getTargetPageParameters = fg;}(TNT, TNT.a, TNT.a.W, TNT.a.b, TNT.a.c, TNT.a.M));(function(X){ function ug(Kc, b, vg, wg) { var xg = 60 * 60, yg = mboxGetPageParameter(vg, true) || Kc.getCookie(wg); if (!yg) { return; } setTimeout(function() { if (typeof(window.mboxDebugLoaded) === 'undefined') { alert('Could not load the remote debug.\nPlease check your connection to ' + b.companyName + ' servers'); } }, xg); var Cb = []; Cb.push(b.adminUrl, '/mbox/mbox_debug.jsp', '?'); Cb.push('mboxServerHost', '=', b.serverHost, '&'); Cb.push('clientCode', '=', b.clientCode); document.write('<' + 'scr' + 'ipt src="' + Cb.join('') + '"><' + '\/scr' + 'ipt>'); } function zg (b, Ag) { var W = X.W, Bg, Cg, _; if (W.Z(b) || W.ab(b) || !W.fb(b)) { return Ag; } for (var Nb in b) { Bg = b.hasOwnProperty(Nb) && Ag.hasOwnProperty(Nb); _ = b[Nb]; Cg = !W.Z(_) && !W.ab(_); if (Bg && Cg) { Ag[Nb] = _; } } return Ag; } function Dg(Tb, Kc) { TNT.createGlobalMbox = function() { X.ig(Tb); }; window.mboxCreate = function(x ) { var c = [].slice.call(arguments, 1); return X.Wf(Tb, x, c); }; window.mboxDefine = function(ze, x ) { var c = [].slice.call(arguments, 2); return X.Xf(Tb, ze, x, c); }; window.mboxUpdate = function(x ) { var c = [].slice.call(arguments, 1); X.Yf(Tb, x, c); }; window.mboxVizTargetUrl = function(x ) { var c = [].slice.call(arguments, 1); return X.pg(Tb, x, c); }; window.mboxSetCookie = function(qb, _, pc) { return X._f(Kc, qb, _, pc); }; window.mboxGetCookie = function(qb) { return X.Zf(Kc, qb); }; if (typeof(X.Eg) !== 'undefined') { window.mboxLoadSCPlugin = function(Fg) { return X.Eg(Tb, Fg); } } } function Gg() { if (typeof(window.mboxVersion) !== 'undefined') { return; } X.b = zg(window.targetGlobalSettings, X.b); var b = X.b, Wd = b.mboxVersion, tg = b.serverHost, mb = b.clientCode, N = X.M.N, vg = X.C.G, wg = X.H.G, Hg = X.H.L, Tb, Kc; window.mboxFactories = X.rg(); window.mboxFactoryDefault = Tb = X.sg(tg, mb, N); window.mboxVersion = Wd; Kc = Tb.getCookieManager(); Dg(Tb, Kc); ug(Kc, b, vg, wg); X.zb = function(Ig) { var lb; if (!b.overrideMboxEdgeServer) { return Ig; } lb = Kc.getCookie(Hg); return lb === null ? Ig : lb; } } X.Gg = Gg;}(TNT.a));TNT.a.Gg();TNT.a.Cf(window.mboxFactoryDefault, TNT.a.b);TNT.a.Re(TNT.a.b, TNT.a.H,window.mboxFactoryDefault.getCookieManager());var mboxTrack=function(mbox,params){var m,u,i,f=mboxFactoryDefault;if(f.isEnabled()){if(f.getMboxes().length()>0){m=f.getMboxes().getById(0);u=m.getURL().replace("mbox="+escape(m.getName()),"mbox="+mbox).replace("/undefined","/ajax").replace("mboxPage="+f.getPageId(),"mboxPage="+mboxGenerateId())+'&'+params,i=new Image();i.style.display='none';i.src=u;document.body.appendChild(i)}else{mboxTrackDefer(mbox,params)}}},mboxTrackDefer=function(mbox,params){var f=mboxFactoryDefault;if(f.isEnabled()){mboxFactoryDefault.getSignaler().signal(mbox,mbox+'&'+params)}},mboxTrackLink=function(mbox,params,url){mboxTrack(mbox,params);setTimeout("location='"+url+"'",500)};if (TNT.isAutoCreateGlobalMbox()) { TNT.createGlobalMbox();}
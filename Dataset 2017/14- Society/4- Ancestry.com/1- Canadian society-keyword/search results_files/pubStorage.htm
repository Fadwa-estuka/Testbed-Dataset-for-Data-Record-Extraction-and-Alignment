<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252"><script type="text/javascript" src="pubStorage_data/ae44cb1d6a"></script><script src="nr-1016.js"></script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info = {"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"ae44cb1d6a","applicationID":"35159135","transactionName":"NVJQMRAEWhBRUUNbCgwYfzMhSmcXUUZeUSYNWUYADBF3DF5GRV0JDlJASiUAQCBfXENXCxY=","queueTime":0,"applicationTime":5,"agent":"","atts":""}</script><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,t,n){function r(n){if(!t[n]){var o=t[n]={exports:{}};e[n][0].call(o.exports,function(t){var o=e[n][1][t];return r(o||t)},o,o.exports)}return t[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(e,t,n){function r(){}function o(e,t,n){return function(){return i(e,[(new Date).getTime()].concat(u(arguments)),t?null:this,n),t?void 0:this}}var i=e("handle"),a=e(2),u=e(3),c=e("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var s=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",p=l+"ixn-";a(s,function(e,t){f[t]=o(l+t,!0,"api")}),f.addPageAction=o(l+"addPageAction",!0),f.setCurrentRouteName=o(l+"routeName",!0),t.exports=newrelic,f.interaction=function(){return(new r).get()};var d=r.prototype={createTracer:function(e,t){var n={},r=this,o="function"==typeof t;return i(p+"tracer",[Date.now(),e,n],r),function(){if(c.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return t.apply(this,arguments)}finally{c.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,t){d[t]=o(p+t)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,(new Date).getTime()])}},{}],2:[function(e,t,n){function r(e,t){var n=[],r="",i=0;for(r in e)o.call(e,r)&&(n[i]=t(r,e[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],3:[function(e,t,n){function r(e,t,n){t||(t=0),"undefined"==typeof n&&(n=e?e.length:0);for(var r=-1,o=n-t||0,i=Array(o<0?0:o);++r<o;)i[r]=e[t+r];return i}t.exports=r},{}],ee:[function(e,t,n){function r(){}function o(e){function t(e){return e&&e instanceof r?e:e?c(e,u,i):i()}function n(n,r,o){if(!p.aborted){e&&e(n,r,o);for(var i=t(o),a=v(n),u=a.length,c=0;c<u;c++)a[c].apply(i,r);var f=s[w[n]];return f&&f.push([y,n,r,i]),i}}function d(e,t){b[e]=v(e).concat(t)}function v(e){return b[e]||[]}function g(e){return l[e]=l[e]||o(n)}function m(e,t){f(e,function(e,n){t=t||"feature",w[n]=t,t in s||(s[t]=[])})}var b={},w={},y={on:d,emit:n,get:g,listeners:v,context:t,buffer:m,abort:a,aborted:!1};return y}function i(){return new r}function a(){(s.api||s.feature)&&(p.aborted=!0,s=p.backlog={})}var u="nr@context",c=e("gos"),f=e(2),s={},l={},p=t.exports=o();p.backlog=s},{}],gos:[function(e,t,n){function r(e,t,n){if(o.call(e,t))return e[t];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[t]=r,r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],handle:[function(e,t,n){function r(e,t,n,r){o.buffer([e],r),o.emit(e,t,n)}var o=e("ee").get("handle");t.exports=r,r.ee=o},{}],id:[function(e,t,n){function r(e){var t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");t.exports=r},{}],loader:[function(e,t,n){function r(){if(!h++){var e=y.info=NREUM.info,t=l.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&t))return f.abort();c(b,function(t,n){e[t]||(e[t]=n)}),u("mark",["onload",a()],null,"api");var n=l.createElement("script");n.src="https://"+e.agent,t.parentNode.insertBefore(n,t)}}function o(){"complete"===l.readyState&&i()}function i(){u("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var u=e("handle"),c=e(2),f=e("ee"),s=window,l=s.document,p="addEventListener",d="attachEvent",v=s.XMLHttpRequest,g=v&&v.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:v,REQ:s.Request,EV:s.Event,PR:s.Promise,MO:s.MutationObserver},e(1);var m=""+location,b={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1016.min.js"},w=v&&g&&g[p]&&!/CriOS/.test(navigator.userAgent),y=t.exports={offset:a(),origin:m,features:{},xhrWrappable:w};l[p]?(l[p]("DOMContentLoaded",i,!1),s[p]("load",r,!1)):(l[d]("onreadystatechange",o),s[d]("onload",r)),u("mark",["firstbyte",a()],null,"api");var h=0},{}]},{},["loader"]);</script></head><body>
<script type="text/javascript">
(function(){
    var maxNum = (typeof pubStorageTestContextMaxNum !== 'undefined') ? pubStorageTestContextMaxNum : 9007199254740992;
	var prefix = 'pub';
	var randomizerKey = prefix + 'Rand';
	var sizeKey = prefix + 'TotalSize';
	var lowestKey = prefix + 'Lowest';
	var highestKey = prefix + 'Highest';
	var usageSuffix = '_u';
	var randomizerLength = 3;
	
	var randomPrefix;
	
	var maxStorageSize = (typeof pubStorageTestContextMaxStorageSize !== 'undefined') ? pubStorageTestContextMaxStorageSize : 500000; //~1 MB of cache @ 2 bytes/char
	var percentToClean = (typeof pubStorageTestContextPercentToClean !== 'undefined') ? pubStorageTestContextPercentToClean : 30;
	
    var originRegex = /\.ancestry(library|heritagequest|institution|classroom|)(aws|)(loc|dev|stage|)\.(co.uk|com.au|[a-z]{2,3})$/i;
	var originRegexPort = /\.ancestry(library|heritagequest|institution|classroom|)(aws|)(loc|dev)\.(co.uk|com.au|[a-z]{2,3}):\d{1,5}$/i;
    function verifyOrigin(origin){
		return originRegex.test(origin) || originRegexPort.test(origin);
    }
	
    function processMessage(event){
        if (!verifyOrigin(event.origin)) throw new Error('Invalid origin: ' + event.origin);
		var request = JSON.parse(event.data);
		var response;
		if (!isSupported) {
			response = {localStorageWorks:false};
		} else {
			initCache();
			if (request.checkLocalStorage) {
				response = {localStorageWorks: true};
			} else if (request.value !== null) {
				var key = storeItem(request.value);
				response = {id: request.id, key: key};
			} else {
				var item = getItem(request.key);
				response = {id: request.id, item: item};
			}
		}
		event.source.postMessage(JSON.stringify(response), event.origin);
    }
	
	function getItem(randomizedKey) {
		var key = getItemKey(randomizedKey);
		var value = localStorage.getItem(prefix + key);
		if (value === null) {
			return null;
		}
		//increment usage and total size
		var usageKey = prefix + key + usageSuffix;
		var curSize = parseInt(localStorage.getItem(sizeKey));
		var usage = parseInt(localStorage.getItem(usageKey));
		var sizeDiff = 0;
		if (isNaN(usage)) {
			usage = 0;
		} else {
			curSize -= usageKey.length + usage.toString().length;
		}
		usage++;
		
		//allocate additional space for usage key / value if needed
		var sizeNeeded = usageKey.length + usage.toString().length;
		if (curSize + sizeNeeded > maxStorageSize) {
			localStorage.setItem(sizeKey, curSize.toString());
			cleanup(sizeNeeded);
			curSize = parseInt(localStorage.getItem(sizeKey));
		}
		try {
			localStorage.setItem(usageKey, usage.toString());
		} catch (e) {
			cleanup(sizeNeeded);
			localStorage.setItem(usageKey, usage.toString());
		}
		
		curSize += usageKey.length + usage.toString().length;
		localStorage.setItem(sizeKey, curSize.toString());
		
		return value;
	}
	
	function getItemKey(randomizedKey) {
		if (randomizedKey.indexOf(randomPrefix) !== 0) return null;
		return randomizedKey.substring(randomPrefix.length);
	}
	
	function storeItem(item) {
			var key = getNextKey();
			var itemKey = prefix + key;
			var lengthNeeded = item.length + itemKey.length;
			cleanupIfNeededToStoreItem(item, itemKey);
			try {
				localStorage.setItem(itemKey, item);
			} catch (e) {
				cleanup(lengthNeeded);
				localStorage.setItem(itemKey, item);
			}
			setHighestAndTotalSize(key, lengthNeeded);
			return randomPrefix + key;
	}
	
	function cleanupIfNeededToStoreItem(item, itemKey) {
		var curSize = JSON.parse(localStorage.getItem(sizeKey));
		var usageKey = itemKey + usageSuffix;
		var usage = localStorage.getItem(usageKey);
		if (usage !== null) {
			usage = usage.toString();
			localStorage.removeItem(usageKey);
			curSize -= usageKey.length + usage.length
			localStorage.setItem(sizeKey, curSize);
		}
		
		var sizeNeeded = item.length + itemKey.length;
		if (curSize + sizeNeeded > maxStorageSize) {
			cleanup(sizeNeeded);
		}
	}
	
	function cleanup(sizeNeeded) {
		var targetSize = maxStorageSize - (maxStorageSize * (percentToClean/100));
		if (sizeNeeded && maxStorageSize - targetSize < sizeNeeded) {
			targetSize = maxStorageSize - sizeNeeded;
		}
		var curSize = JSON.parse(localStorage.getItem(sizeKey));
		var lowest = JSON.parse(localStorage.getItem(lowestKey));
		var highest = JSON.parse(localStorage.getItem(highestKey));
		
		//sort all keys into buckets based on usage - remove lowest bucket first
		// this will fragment the key space - should we defragment as well?
		
		var buckets = {'0':[]};
		var key = null;
		var usageKey = null;
		var prefixedKey = null;
		var numKeys = localStorage.length;
		
		for (var i = 0; i < localStorage.length; i++) {
			prefixedKey = localStorage.key(i);
			if (prefixedKey.indexOf(prefix) !== 0 || prefixedKey.indexOf(usageSuffix) === (prefixedKey.length - usageSuffix.length)) continue;
			key = parseInt(prefixedKey.substring(prefix.length));
			if (isNaN(key) || key < lowest || key > highest) continue;
			usageKey = prefixedKey + usageSuffix;
			usage = parseInt(localStorage.getItem(usageKey));
			if (isNaN(usage)) usage = 0;
			if (!buckets[usage]) buckets[usage] = [];
			buckets[usage].push(key);
		}
		//sort buckets and contents in ascending order
		var bucketOrder = [];
		for (i in buckets) {
			buckets[i].sort(function (a, b){ return a - b; });
			bucketOrder.push(parseInt(i));
		}
		bucketOrder.sort(function (a, b){ return a - b; });
		
		var curBucketOrderIdx = 0;
		var curBucketIdx = 0;
		while (curSize > targetSize && curBucketOrderIdx < bucketOrder.length) {
			var curBucketProp = bucketOrder[curBucketOrderIdx].toString();
			var curBucket = buckets[curBucketProp];
			key = curBucket[curBucketIdx];
			var itemKey = prefix + key;
			var curItem = localStorage.getItem(itemKey);
			var itemUsageKey = itemKey + usageSuffix;
			//delete usage item
			if (curBucketProp !== '0') {
				localStorage.removeItem(itemUsageKey);
				curSize -= (itemUsageKey.length + curBucketProp.length);
			}
			// delete item proper	
			localStorage.removeItem(itemKey);
			curSize -= (curItem.length + itemKey.length);
			if (key === lowest && lowest < highest)
				lowest++;
			curBucketIdx++;
			if (curBucketIdx >= curBucket.length) {
				curBucketOrderIdx++;
				curBucketIdx = 0;
			}
		}
		
		localStorage.setItem(sizeKey, curSize);
		localStorage.setItem(lowestKey, lowest);
	}
	
	function getNextKey() {
		var highest = JSON.parse(localStorage.getItem(highestKey));
		if (!highest) {
			localStorage.setItem(lowestKey, '1');
			localStorage.setItem(highestKey, '1');
			highest = 0;
		}
		if (highest >= maxNum) {
			localStorage.removeItem(sizeKey);
			initCache();
			localStorage.setItem(lowestKey, '1');
			highest = 0;
		}
		highest++;
		return highest;
	}
	
	function setHighestAndTotalSize(highest, lengthNeeded) {
		localStorage.setItem(highestKey, highest.toString());
		
		var curSize = JSON.parse(localStorage.getItem(sizeKey));
		curSize += lengthNeeded;
		localStorage.setItem(sizeKey, curSize.toString());
	}
	
	function initCache() {
		if (!localStorage.getItem(sizeKey)) {
			clearPubEntries();
			localStorage.setItem(sizeKey, '0');
			randomPrefix = getRandomString(randomizerLength);
			localStorage.setItem(randomizerKey, randomPrefix);
		}
		if (!randomPrefix) {
			randomPrefix = localStorage.getItem(randomizerKey);
		}
	}
	
	function getRandomString(length) {
		var result = '';
		var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
		for (var i = 0; i < length; ++i) {
			result += chars.charAt(Math.floor(Math.random() * chars.length));
		}
		return result;
	}
	
	function clearPubEntries() {
		for (var key in localStorage) {
			if (key.indexOf(prefix) === 0)
				localStorage.removeItem(key);
		}
	}
	
	var isSupported = false;
    try {
        isSupported = window.postMessage && JSON;
        var storageTest = 'pageurlbrokertestlocalstorage';
        localStorage.setItem(storageTest, storageTest);
        if (localStorage.getItem(storageTest) !== storageTest) {
            isSupported = false;
        }
        localStorage.removeItem(storageTest);
    } catch (e) {
        isSupported = false;
    }
	if (!isSupported) {
		if (window.XMLHttpRequest) {
			var envDomainStr = "";
			var hostPrefix = "PRD";
			var devLevel = 'live';
			var hostName = window.location.hostname;
			if (hostName.indexOf('dev.') != -1 || hostName.indexOf('loc.') != -1)
				devLevel = 'dev';
			else if (hostName.indexOf('stage.') != -1)
				devLevel = 'stage';
			switch (devLevel) {
				case 'dev':
				case 'loc':
					envDomainStr = 'dev';
					hostPrefix = 'ACC';
				break;
				case 'stage':
					envDomainStr = 'stage';
					hostPrefix = 'PPE';
				break;
			}
			var protocol = window.location.protocol || 'http:';
			var loggingUrl = protocol + "//fel.ancestry" + envDomainStr + ".com/webapi/events";
			var errorData = {
				eventName: "ThirdPartyLocalStorageUnsupported",
				componentId: "PageUrlBrokerClient",
				hostName: hostPrefix + "XXXXAPSPUB00",
				eventProperties: {
					
				}
			};
			var request = new XMLHttpRequest();
			request.withCredentials = true;
			request.open('POST', loggingUrl, true);
			request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
			request.send(JSON.stringify(errorData));
		}
	}

    if (window.addEventListener) {
        window.addEventListener("message", processMessage, false);
    } else if (window.attachEvent) {
        window.attachEvent("onmessage", processMessage);
    }
})();
</script>

</body></html>
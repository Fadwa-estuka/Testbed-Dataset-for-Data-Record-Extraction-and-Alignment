angular.module("SearchFormServiceUI").directive("sfsYearExactness",["$window",function($window){function linkFn($scope){++directiveCount;$scope.directiveId="sfsYearExactnes_"+directiveCount;$scope.calloutId="callout_"+$scope.proximityName+"_"+$scope.directiveId;$scope.exactnessCheckboxId="checkbox_"+$scope.exactnessName+"_"+$scope.directiveId;var sfsData=$window[$scope.domPrefix+"sfsData"];$scope.exactText=sfsData.exactYearText;$scope.exactToText=sfsData.exactToText;$scope.buttonDisplayText=sfsData.eventYearExactButtonDisplay;$scope.exactnessDisplayText=sfsData.eventYearExactnessDisplay;$scope.exactnesses=[0,1,2,5,10];$scope.setIsExact=function(isYearExact){$scope.isYearExact=isYearExact;isYearExact?($scope.event.dateProximity.day=$scope.event.dateProximity.day||0,$scope.event.dateProximity.month=$scope.event.dateProximity.month||0,$scope.event.dateProximity.year=$scope.event.dateProximity.year||0):($scope.event.dateProximity.day=null,$scope.event.dateProximity.month=null,$scope.event.dateProximity.year=null)};$scope.$watch("event.dateProximity.year",function(){$scope.setIsExact($scope.event.dateProximity.year!=null)});$scope.getItemDomId=function(exactness){return"input_"+$scope.proximityName+"_"+exactness+"_"+$scope.directiveId}}var directiveCount=0;return{restrict:"E",replace:!0,scope:{proximityName:"@",exactnessName:"@",event:"=",domPrefix:"@"},link:linkFn,template:'<div class="exact-filter"><button type="button" class="link icon locationButton"data-ng-click="setIsExact(true)" data-ng-class="{ iconCheck: isYearExact, inputBox : !isYearExact }" data-sfs-callout="{{calloutId}}" data-sfs-callout-focus="{{exactnessCheckboxId}}" data-autoname="YearExactButton"><span>{{ isYearExact ? buttonDisplayText[event.dateProximity.year] : exactText + "..." }}<\/span><\/button><div id="{{calloutId}}" class="form calloutDomContent"><input id="{{exactnessCheckboxId}}" class="checkbox" type="checkbox" data-ng-model="isYearExact" data-ng-change="setIsExact(isYearExact)"><label for="{{exactnessCheckboxId}}">{{exactToText}}<\/label><input type="hidden" value="1" data-ng-if="event.date.year != null && isYearExact" name="{{exactnessName}}" /><input type="hidden" value="{{event.dateProximity.year}}" name="{{proximityName}}" data-ng-if="event.date.year != null && isYearExact" /><ul style="list-style-type: none;"><li data-ng-repeat="exactness in exactnesses" data-ng-init="itemDomId = getItemDomId(exactness)"><input id="{{itemDomId}}" class="radio" type="radio" name="{{proximityName}}__{{directiveId}}" data-no-submit data-ng-value="{{exactness}}" data-ng-model="$parent.event.dateProximity.year" data-ng-change="setIsExact(true)"><label for="{{itemDomId}}" data-autoname="Exact{{exactness}}">{{exactnessDisplayText[exactness]}}<\/label><\/li><\/ul><\/div><\/div>'}}]);
angular.module("SearchFormServiceUI").factory("queryParamCollection",function($rootScope,$window){function parseValues(queryString){var result={},pairs,i,pairStr,pairArr,key,value;if(!queryString)return result;for(pairs=queryString.split("&"),i=0;i<pairs.length;i++)(pairStr=pairs[i],pairArr=pairStr.split("="),pairArr.length==2)&&(key=decodeURIComponent(pairArr[0].replace(/\+/g," ")),value=decodeURIComponent(pairArr[1].replace(/\+/g," ")),key&&value&&(result[key]=value));return result}var service={},queryParams=null,personPickerParams=null,savedData={},formWasCleared={};return service.getUrlParams=function(){return queryParams||(queryParams=parseValues($window.location.search.substring(1))),queryParams},service.getPersonPickerParams=function(){return personPickerParams},service.getPersonPickerParam=function(key){var result=personPickerParams[key];return result?result:null},service.updatePersonPickerParams=function(params){personPickerParams=params},service.getByKey=function(key,domPrefix){return service.getFormData(domPrefix)[key]},service.getFormData=function(domPrefix){if(formWasCleared[domPrefix])return{};if(savedData[domPrefix])return savedData[domPrefix];var data=service.getUrlParams();return savedData[domPrefix]=data,$window.Ancestry&&$window.Ancestry.SFS&&$window.Ancestry.SFS.InitialValues&&$.each($window.Ancestry.SFS.InitialValues,function(propName,propVal){data[propName]=propVal}),savedData[domPrefix]},$rootScope.$on("clearFormEvent",function(event,domPrefix){formWasCleared[domPrefix]=!0;savedData[domPrefix]=null}),service});
angular.module("SearchFormServiceUI").factory("sfsCookies",function($window){var service={};return service.getAll=function(){return $window.document.cookie.split(";")},service.get=function(name){for(var c,nameEq=name+"=",ca=service.getAll(),i=0;i<ca.length;i++){for(c=ca[i];c.charAt(0)==" ";)c=c.substring(1,c.length);if(c.indexOf(nameEq)==0)return c.substring(nameEq.length,c.length)}return null},service.set=function(name,value,days){var expires="",date;days&&(date=new Date,date.setTime(date.getTime()+days*864e5),expires="; expires="+date.toGMTString());$window.document.cookie=name+"="+value+expires+"; path=/"},service.remove=function(name){service.set(name,"",-1)},service});
angular.module("SearchFormServiceUI").factory("userPreferences",["$rootScope","$window","queryParamCollection","sfsDataModelProvider",function($rootScope,$window,queryParamCollection,sfsDataModelProvider){function getUserPreferences(domPrefix,metadata){if(formWasCleared[domPrefix])return{};if(userPrefs)return userPrefs;var isInstitutional=metadata.user.isInstitutional,isUserPrefsAvailable=window.Ancestry!=null&&Ancestry.SFS!=null&&Ancestry.SFS.Settings!=null&&Ancestry.SFS.Settings.UserPreferences!=null;return userPrefs=!isInstitutional&&isUserPrefsAvailable?angular.copy(Ancestry.SFS.Settings.UserPreferences)||{}:createUserPrefObject(),userPrefs.CategoryBucket=userPrefs.CategoryBucket||"rstp",userPrefs.DefaultCollectionFocus=isUserPrefsAvailable?Ancestry.SFS.Settings.DefaultCollectionFocus:"0",userPrefs.MatchAllTermsExactly=userPrefs.MatchAllTermsExactly===!0,userPrefs.ShowMoreOptions=userPrefs.ShowMoreOptions===!0,userPrefs.FirstNameExactness=userPrefs.FirstNameExactness||{Exact:!1,Phonetic:!1,Similar:!1,Initials:!1},userPrefs.LastNameExactness=userPrefs.LastNameExactness||{Exact:!1,Phonetic:!1,Similar:!1,Soundex:!1},userPrefs}function createUserPrefObject(){return{CategoryBucket:null,CollectionFocus:"0",FirstNameExactness:{Exact:!1,Phonetic:!1,Similar:!1,Initials:!1},LastNameExactness:{Exact:!1,Phonetic:!1,Similar:!1,Soundex:!1},MatchAllTermsExactly:!1,ShowMoreOptions:!1}}function loadNameExactnessDefaults(nameExactness,exactDefaults,isExactAllEnabled){nameExactness.isExact=isExactAllEnabled||exactDefaults.Exact;nameExactness.isExact&&$.each(exactDefaults,function(key,value){switch(key){case"Phonetic":nameExactness.flags.phonetic=value;break;case"Similar":nameExactness.flags.similar=value;break;case"Initials":nameExactness.flags.initials=value;break;case"Soundex":nameExactness.flags.soundex=value}})}function allFieldsWithValuesAreExact(dataModel){var hasGivenName=dataModel.name.givenName!=null&&dataModel.name.givenName.length>0,hasSurname,eventGroupNames,eventGroup,event,familyRelationships,familyGroup,j,member,fieldNames,i,fieldObj;if(hasGivenName&&!dataModel.name.givenNameExactness.isExact||(hasSurname=dataModel.name.surname!=null&&dataModel.name.surname.length>0,hasSurname&&!dataModel.name.surnameExactness.isExact))return!1;for(eventGroupNames=Object.keys(dataModel.events),i=0;i<eventGroupNames.length;++i)for(eventGroup=dataModel.events[eventGroupNames[i]],j=0;j<eventGroup.instances.length;++j)if((event=eventGroup.instances[j],event.date.year!=null&&event.dateProximity.year==null||event.date.month!=null&&event.dateProximity.month==null||event.date.day!=null&&event.dateProximity.day==null)||event.location!=null&&event.location.length>0&&!event.locationExactness.isExact)return!1;for(familyRelationships=Object.keys(dataModel.family),i=0;i<familyRelationships.length;++i)for(familyGroup=dataModel.family[familyRelationships[i]],j=0;j<familyGroup.instances.length;++j)if((member=familyGroup.instances[j],member.givenName!=null&&member.givenName.length>0&&!member.givenNameExactness.isExact)||member.surname!=null&&member.surname.length>0&&!member.surnameExactness.isExact)return!1;for(fieldNames=Object.keys(dataModel.fields),i=0;i<fieldNames.length;++i)if(fieldObj=dataModel.fields[fieldNames[i]],fieldObj.value!=null&&fieldObj.value.length>0&&!fieldObj.isExact)return!1;return!0}function isAllCollectionsPriority(priorityValue){return priorityValue==null||priorityValue===""||priorityValue==="default"}function fieldInAdvancedAreaHasNonDefaultValue(domPrefix,dataModel,metadata){var defaultCollectionPriorityItem,eventGroupNames,eventGroupName,eventGroup,event,familyRelationships,familyGroup,fieldNames,i,fieldObj;if(dataModel.isExactAllEnabled||(defaultCollectionPriorityItem=sfsDataModelProvider.getCollectionFocusItem(domPrefix,metadata.defaultSearchBlock),dataModel.priority!==defaultCollectionPriorityItem.weightGroupName&&(!isAllCollectionsPriority(dataModel.priority)||!isAllCollectionsPriority(defaultCollectionPriorityItem.weightGroupName)))||dataModel.types.records!==!0||dataModel.types.stories!==!0||dataModel.types.trees!==!0||dataModel.types.photos!==!0)return!0;for(eventGroupNames=Object.keys(dataModel.events),i=0;i<eventGroupNames.length;++i)if((eventGroupName=eventGroupNames[i],eventGroup=dataModel.events[eventGroupName],eventGroup.instances.length>0&&eventGroupName!=="SelfBirth"&&eventGroupName!=="Self")||eventGroupName==="Self"&&eventGroup.instances.length>1||eventGroup.instances.length===1&&((event=eventGroup.instances[0],event.date.month!=null||event.date.day!=null)||eventGroupName!=="SelfBirth"&&event.date.year!=null||eventGroupName!=="Self"&&event.location!=null&&event.location.length>0))return!0;for(familyRelationships=Object.keys(dataModel.family),i=0;i<familyRelationships.length;++i)if(familyGroup=dataModel.family[familyRelationships[i]],familyGroup.instances.length>0)return!0;for(fieldNames=Object.keys(dataModel.fields),i=0;i<fieldNames.length;++i)if(fieldObj=dataModel.fields[fieldNames[i]],fieldObj.value!=null&&fieldObj.value.length>0)return!0;return!1}var service={},userPrefs=null,formWasCleared={};return $rootScope.$on("clearFormEvent",function(event,domPrefix){formWasCleared[domPrefix]=!0;userPrefs=null}),service.updateMetadataDefaults=function(domPrefix){var metadata=sfsDataModelProvider.getMetadata(domPrefix),userPrefs=getUserPreferences(domPrefix,metadata);metadata.defaultSearchBlock=userPrefs!=null&&typeof userPrefs.DefaultCollectionFocus!="undefined"?userPrefs.DefaultCollectionFocus:metadata.defaultSearchBlock||"0"},service.applyUserPreferences=function(domPrefix){var dataModel=sfsDataModelProvider.getDataModel(domPrefix),metadata=sfsDataModelProvider.getMetadata(domPrefix),collectionFocus;if(domPrefix&&dataModel&&metadata){var params=queryParamCollection.getUrlParams(),userPrefs=getUserPreferences(domPrefix,metadata),isExactAllEnabled=userPrefs!=null&&userPrefs.MatchAllTermsExactly===!0,isRefiningSearch=metadata.form.isRefiningSearch;(metadata.querySetVersion==="V1"&&params.MSAV&&(isExactAllEnabled=params.MSAV==="-1"||params.MSAV==="2"),isExactAllEnabled&&(isRefiningSearch?(dataModel.isExactAllEnabled=allFieldsWithValuesAreExact(dataModel),dataModel.isExactAllEnabled&&sfsDataModelProvider.matchAllTermsExactly(domPrefix,!0)):(dataModel.isExactAllEnabled=!0,sfsDataModelProvider.matchAllTermsExactly(domPrefix,!0))),dataModel.isShowMoreOptionsExpanded=userPrefs!=null&&userPrefs.ShowMoreOptions===!0||fieldInAdvancedAreaHasNonDefaultValue(domPrefix,dataModel,metadata),metadata.querySetVersion==="V1"&&params.MSAV&&(dataModel.isShowMoreOptionsExpanded=params.MSAV==="1"||params.MSAV==="2"||fieldInAdvancedAreaHasNonDefaultValue(domPrefix,dataModel,metadata)),userPrefs!=null&&(isRefiningSearch&&dataModel.name.givenName!=null&&dataModel.name.givenName.length!==0||loadNameExactnessDefaults(dataModel.name.givenNameExactness,userPrefs.FirstNameExactness,dataModel.isExactAllEnabled),isRefiningSearch&&dataModel.name.surname!=null&&dataModel.name.surname.length!==0||loadNameExactnessDefaults(dataModel.name.surnameExactness,userPrefs.LastNameExactness,dataModel.isExactAllEnabled)),isRefiningSearch)||(dataModel.viewMode=userPrefs.ViewMode||dataModel.viewMode,dataModel.page.size=userPrefs.ResultsPageSize?userPrefs.ResultsPageSize:dataModel.page.size,collectionFocus=userPrefs!=null&&userPrefs.CollectionFocus!=null?userPrefs.CollectionFocus:metadata.defaultSearchBlock,sfsDataModelProvider.populateCollectionPriority(domPrefix,collectionFocus),userPrefs&&userPrefs.CategoryBucket&&sfsDataModelProvider.populateCategoryBucketFromString(domPrefix,userPrefs.CategoryBucket),dataModel.isShowMoreOptionsExpanded=dataModel.isShowMoreOptionsExpanded||fieldInAdvancedAreaHasNonDefaultValue(domPrefix,dataModel,metadata))}},service.saveUserPreferences=function(domPrefix,callback){callback=callback||function(){};var dataModel=sfsDataModelProvider.getDataModel(domPrefix),metadata=sfsDataModelProvider.getMetadata(domPrefix),searchPreferences={};if(dataModel.name.givenName!=null&&dataModel.name.givenName.length>0&&metadata.form.fieldNames.indexOf("SelfGivenName")!==-1&&(searchPreferences.givenNameExactness=dataModel.name.givenNameExactness),dataModel.name.surname!=null&&dataModel.name.surname.length>0&&metadata.form.fieldNames.indexOf("SelfSurname")!==-1&&(searchPreferences.surnameExactness=dataModel.name.surnameExactness),(metadata.form.type==="Global"||metadata.form.type==="OldSearchSimulator")&&(searchPreferences.types=dataModel.types,searchPreferences.showMoreOptions=dataModel.isShowMoreOptionsExpanded),searchPreferences.matchAll=dataModel.isExactAllEnabled,metadata.collectionFocus.isAvailable){var collectionFocusList=metadata.collectionFocus.items,collectionFocusMatches=$.grep(collectionFocusList,function(elem){return elem.weightGroupName===dataModel.priority}),collectionFocusId=collectionFocusMatches.length>0?collectionFocusMatches[0].id:dataModel.priority==null||dataModel.priority===""?"":null;collectionFocusId!=null&&(searchPreferences.collectionFocus=collectionFocusId)}Object.keys(searchPreferences).length===0?callback():$.ajax({type:"POST",url:metadata.ancestryDomain+"/api/search-preferences",crossDomain:!0,xhrFields:{withCredentials:!0},contentType:"application/json",data:JSON.stringify(searchPreferences),processData:!1,dataType:"json",timeout:500,success:callback,error:callback})},service}]);
angular.module("SearchFormServiceUI").service("sfsDataModelProvider",["$rootScope","$window","$timeout","urlCanonicalizerProvider","sfsLocationExactnessProvider",function($rootScope,$window,$timeout,urlCanonicalizerProvider,sfsLocationExactnessProvider){function getTwoNameDefaults(){return twoNameDefault}function getMetadata(domPrefix){return $window[domPrefix+"ScopeMetadata"]}function getDataModel(domPrefix){if(dataModels[domPrefix]==null){var dataModelMetadata=getMetadata(domPrefix),dataModel;$window.ancestry&&$window.ancestry.search&&$window.ancestry.search.dataModel?(dataModel=$window.ancestry.search.dataModel,dataModels[domPrefix]=dataModel):(dataModel={searchSource:null,types:{records:!0,stories:!0,trees:!0,photos:!0},name:$.extend(!0,{},nameDefault),isShowMoreOptionsExpanded:!1,isExactAllEnabled:!1,events:{},family:{},fields:{SelfGender:$.extend(!0,{},fieldDefault,{relation:"Self",assertion:"Gender"}),SelfRace:$.extend(!0,{},fieldDefault,{relation:"Self",assertion:"Race"}),keyword:$.extend(!0,{},fieldDefault,{relation:"",assertion:"keyword"})},page:{number:1,cursor:null,size:20},location:[],priority:"default",range:{yearStart:null,yearEnd:null},treePerson:{treeId:null,personId:null}},dataModels[domPrefix]=dataModel,loadDefaultCategoryBucket(domPrefix));$.each(dataModelMetadata.events,function(eventMetadataKey,eventMetadataObj){dataModel.events[eventMetadataKey]=dataModel.events[eventMetadataKey]||{instances:[]};dataModel.events[eventMetadataKey].relation=eventMetadataObj.relation;dataModel.events[eventMetadataKey].eventName=eventMetadataObj.eventName});$.each(dataModelMetadata.customEvents,function(eventMetadataKey,eventMetadataObj){dataModel.events[eventMetadataKey]==null&&(dataModel.events[eventMetadataKey]={relation:eventMetadataObj.relation,eventName:eventMetadataObj.eventName,instances:[]})});dataModel.fields.SelfGender.relation="Self";dataModel.fields.SelfGender.assertion="Gender";dataModel.fields.SelfRace.relation="Self";dataModel.fields.SelfRace.assertion="Race";dataModel.fields.keyword.relation="";dataModel.fields.keyword.assertion="keyword";$.each(dataModelMetadata.fields,function(fieldName,field){dataModel.fields[fieldName]=dataModel.fields[fieldName]||{value:"",isExact:!1,relation:field.relation,assertion:field.assertion}});$.each(dataModelMetadata.family,function(relationship,familyMemberGroupConfiguration){for(dataModel.family[relationship]=dataModel.family[relationship]||{instances:[]};dataModel.family[relationship].instances.length<familyMemberGroupConfiguration.instances;)service.addFamilyMember(domPrefix,relationship)});$.each(dataModelMetadata.singletonEvents,function(defaultEventIndex,defaultEvent){service.addEvent(domPrefix,defaultEvent)});ensureIsExactAllEnabledSyncsWithModelChanges(domPrefix,dataModel)}return dataModels[domPrefix]}function ensureIsExactAllEnabledSyncsWithModelChanges(domPrefix,dataModel){$rootScope.sfsDataModels=$rootScope.sfsDataModels||{};$rootScope.sfsDataModels[domPrefix]=dataModel;$rootScope.$watch("sfsDataModels."+domPrefix,function(){disableExactAllIfModelHasFieldWithExactnessDisabled(dataModel)},!0)}function disableExactAllIfModelHasFieldWithExactnessDisabled(dataModel){var eventGroupNames,eventGroup,event,familyRelationships,familyGroup,j,member,fieldNames,i,fieldObj;if(dataModel.isExactAllEnabled=dataModel.isExactAllEnabled===!0&&dataModel.name.givenNameExactness.isExact===!0&&dataModel.name.surnameExactness.isExact===!0,dataModel.isExactAllEnabled){for(eventGroupNames=Object.keys(dataModel.events),i=0;i<eventGroupNames.length;++i)for(eventGroup=dataModel.events[eventGroupNames[i]],j=0;j<eventGroup.instances.length;++j)if(event=eventGroup.instances[j],event.dateProximity.year==null||event.dateProximity.month==null||event.dateProximity.day==null||event.locationExactness.isExact===!1){dataModel.isExactAllEnabled=!1;return}for(familyRelationships=Object.keys(dataModel.family),i=0;i<familyRelationships.length;++i)for(familyGroup=dataModel.family[familyRelationships[i]],j=0;j<familyGroup.instances.length;++j)if(member=familyGroup.instances[j],member.givenNameExactness.isExact===!1||member.surnameExactness.isExact===!1){dataModel.isExactAllEnabled=!1;return}for(fieldNames=Object.keys(dataModel.fields),i=0;i<fieldNames.length;++i)if(fieldObj=dataModel.fields[fieldNames[i]],!fieldObj.isExact){dataModel.isExactAllEnabled=!1;return}}}function resetIfPersonPicker(domPrefix,source){source==="personPicker"&&service.resetData(domPrefix)}function populateFromData(domPrefix,data,source,callback){var dataModel,dataModelProvidedOnPage,searchSourceRegex,searchSourceMatch;if(callback=callback||function(){},dataModel=service.getDataModel(domPrefix),!dataModel)return callback();if(!data)return resetIfPersonPicker(domPrefix,source),callback();if(getMetadata(domPrefix).querySetVersion==="V2"){if(dataModelProvidedOnPage=(($window.ancestry||{}).search||{}).dataModel!=null,source==="onload"&&dataModelProvidedOnPage)return dataModel.limitRecordsToCountry=data.sbo==="0",callback();urlCanonicalizerProvider.getUrlCanonicalizer().queryParamNormalizer.getDataModel(data,"searchResults",null,function(err,searchDataModel){$timeout(function(){resetIfPersonPicker(domPrefix,source);searchDataModel.searchSource=dataModel.searchSource;searchDataModel.categories=dataModel.categories;searchDataModel.collections=dataModel.collections;$.extend(!0,searchDataModel.page,dataModel.page);$.extend(!0,dataModel,searchDataModel);addFamilyMemberFirstAndSecondSurnames(domPrefix,dataModel);enforceFamilyLimits(domPrefix,dataModel);dataModel.limitRecordsToCountry=data.sbo==="0";dataModel.isExactAllEnabled&&matchAllTermsExactly(domPrefix,dataModel.isExactAllEnabled);callback()},1)})}else resetIfPersonPicker(domPrefix,source),populateRaceFromData(domPrefix,data),populateGenderFromData(domPrefix,data),populateKeywordFromData(domPrefix,data),populateMsavFromData(domPrefix,data),populateNameFromData(domPrefix,data),populateEventsFromData(domPrefix,data),populateFamilyFromData(domPrefix,data),populateFieldsFromData(domPrefix,data),populateYearRangeFromData(domPrefix,data),searchSourceRegex=/pt_t([^_]+)_p(([^_]|$)+)/,data.ssrc&&searchSourceRegex.test(data.ssrc)&&(searchSourceMatch=data.ssrc.match(searchSourceRegex),dataModel.treePerson.treeId=searchSourceMatch[1],dataModel.treePerson.personId=searchSourceMatch[2]),data.cp&&populateCollectionPriority(domPrefix,data.cp),data&&data.catBucket?populateCategoryBucketFromString(domPrefix,data.catBucket):data&&data.catbucket&&populateCategoryBucketFromString(domPrefix,data.catbucket),dataModel.limitRecordsToCountry=data.sbo==="0",dataModel.isExactAllEnabled&&matchAllTermsExactly(domPrefix,dataModel.isExactAllEnabled),callback()}function enforceFamilyLimits(domPrefix,model){for(var metadata=getMetadata(domPrefix),relationships=Object.keys(model.family),i=0;i<relationships.length;++i){var relationship=relationships[i],familyGroupMetadata=metadata.family[relationship],familyGroup=model.family[relationship];for(familyGroup.instances.splice(familyGroupMetadata.maxCount,Math.max(familyGroup.instances.length-familyGroupMetadata.maxCount,0));familyGroup.instances.length<familyGroupMetadata.instances;)addFamilyMember(domPrefix,relationship)}}function addFamilyMemberFirstAndSecondSurnames(domPrefix,model){var metadata=service.getMetadata(domPrefix);metadata.name.usesParentSurnameFields&&Object.keys(model.family).forEach(function(familyGroupStr){var familyGroup=model.family[familyGroupStr];familyGroup.instances.forEach(function(member){member.surname=member.surname.replace(/ +/g," ").replace(/ y /gi," ");var surnames=member.surname.split(" ");member.firstSurname=surnames.length>=1?surnames[0]:"";member.secondSurname=surnames.length>=2?surnames.slice(1).join(" "):""})})}function populateCollectionPriority(domPrefix,searchBlock){var collectionPriorityItem=getCollectionFocusItem(domPrefix,searchBlock),dataModel=service.getDataModel(domPrefix);collectionPriorityItem&&(dataModel.location.length=0,$.merge(dataModel.location,collectionPriorityItem.locationGpids||[]),dataModel.priority=collectionPriorityItem.weightGroupName||"")}function getCollectionFocusItem(domPrefix,collectionFocusId){var metadata=getMetadata(domPrefix),collectionFocusList=metadata.collectionFocus.items;return $.grep(collectionFocusList,function(elem){return elem.id===collectionFocusId})[0]}function populateKeywordFromData(domPrefix,data){var dataModel=service.getDataModel(domPrefix);dataModel.fields.keyword.value=data.gskw||"";dataModel.fields.keyword.isExact=data.gskw_x==="1"}function populateRaceFromData(domPrefix,data){var dataModel=service.getDataModel(domPrefix);dataModel.fields.SelfRace.value=data._83004002||"";dataModel.fields.SelfRace.isExact=data._83004002_x==="1"}function populateGenderFromData(domPrefix,data){var dataModel=service.getDataModel(domPrefix),genderParam=data["_83004003-n_xcl"];dataModel.fields.SelfGender.value=genderParam==="m"?"female":genderParam==="f"?"male":null;dataModel.fields.SelfGender.isExact=!1}function loadDefaultCategoryBucket(domPrefix){var metadata=getMetadata(domPrefix),defaultCategoryBucketStr=metadata.form.type.toUpperCase()==="OLDSEARCHSIMULATOR"?"r":"rstp";populateCategoryBucketFromString(domPrefix,defaultCategoryBucketStr)}function populateCategoryBucketFromString(domPrefix,categoryBucketStr){var model=getDataModel(domPrefix);model.types.records=categoryBucketStr.indexOf("r")!==-1;model.types.stories=categoryBucketStr.indexOf("s")!==-1;model.types.trees=categoryBucketStr.indexOf("t")!==-1;model.types.photos=categoryBucketStr.indexOf("p")!==-1;model.types.records||model.types.stories||model.types.trees||model.types.photos||loadDefaultCategoryBucket(domPrefix)}function populateNameFromData(domPrefix,data){function setExactnessObj(exactnessObj,exactnessString){exactnessString!=="0"&&exactnessString?exactnessString==="1"?(exactnessObj.isExact=!0,$.each(exactnessObj.flags,function(key){exactnessObj.flags[key]=!1})):($.each(exactnessString.split("_"),function(index,elem){switch(elem){case"NP":exactnessObj.flags.phonetic=!0;break;case"NN":exactnessObj.flags.similar=!0;break;case"NIC":exactnessObj.flags.initials=!0;break;case"NS":exactnessObj.flags.soundex=!0}}),exactnessObj.isExact=!0):(exactnessObj.isExact=!1,$.each(exactnessObj.flags,function(key){exactnessObj.flags[key]=!1}))}var dataModel=service.getDataModel(domPrefix);dataModel.name.givenName=data.gsfn||"";dataModel.name.surname=service.getMetadata(domPrefix).name.usesParentSurnameFields?((data.gsfln||"")+" "+(data.gssln||"")).trim():data.gsln||"";setExactnessObj(dataModel.name.givenNameExactness,data.gsfn_x);setExactnessObj(dataModel.name.surnameExactness,data.gsln_x)}function populateMsavFromData(domPrefix,data){var dataModel=service.getDataModel(domPrefix),msav;if(dataModel&&data&&data.MSAV){msav=parseInt(data.MSAV);switch(msav){case 2:dataModel.isExactAllEnabled=!0;dataModel.isShowMoreOptionsExpanded=!0;break;case 1:dataModel.isExactAllEnabled=!1;dataModel.isShowMoreOptionsExpanded=!0;break;case 0:dataModel.isExactAllEnabled=!1;dataModel.isShowMoreOptionsExpanded=!1;break;case-1:dataModel.isExactAllEnabled=!0;dataModel.isShowMoreOptionsExpanded=!1}}}function populateFieldsFromData(domPrefix,data){var dataModel=service.getDataModel(domPrefix),dataModelMetadata,indexForms;dataModel&&(dataModelMetadata=getMetadata(domPrefix),indexForms=["","-n","__n"],$.each(dataModel.fields,function(fieldName,field){var fieldMetadata=dataModelMetadata.fields[fieldName],searchKey,i,resolvedValue,resolvedExactnessValue;if(fieldMetadata!=null)for(searchKey=fieldMetadata.searchKey,i=0;i<indexForms.length;++i)resolvedValue=data[searchKey+indexForms[i]],resolvedValue!==undefined&&(field.value=resolvedValue),resolvedExactnessValue=data[searchKey+indexForms[i]+"_x"],resolvedExactnessValue!==undefined&&(field.isExact=resolvedExactnessValue==="1")}))}function populateYearRangeFromData(domPrefix,data){var dataModel=service.getDataModel(domPrefix),yearStart=data.ossyear,yearEnd;yearStart!=null&&(dataModel.range.yearStart=parseInt(yearStart)||null);yearEnd=data.ossyearend;yearEnd!=null&&(dataModel.range.yearEnd=parseInt(yearEnd)||null)}function loadLocationExactness(domPrefix,event,locationExactnessStr){if(event.locationExactness.isExact&&$.inArray(locationExactnessStr,locationExactnesses)!==-1){var exactness=sfsLocationExactnessProvider.getExactnessFromStr(event.gpid,locationExactnessStr)||{relativeLevel:0,isAdjacent:!1};event.locationExactness.level=exactness.relativeLevel;event.locationExactness.isAdjacent=exactness.isAdjacent;event.locationExactness.level<0&&(event.locationExactness.level=0,event.locationExactness.isAdjacent=!1)}}function populateEventsFromData(domPrefix,data){function getEventData(keyRoot,index,suffix){suffix=suffix||"";var key=keyRoot+index+suffix,eventData=data[key];return(eventData==null&&index==0&&(key=keyRoot+suffix,eventData=data[key]),eventData==null&&suffix=="__ftp")?getEventData(keyRoot,index,"-ftp"):eventData}function getPInfoFromStr(pinfoStr){var pinfoParts,level,pinfo,errorParsing;return pinfoStr==null?null:(pinfoParts=pinfoStr.split("|"),pinfoParts.length!==12)?null:(level=parseInt(pinfoParts.splice(0,1)[0])||null,pinfoParts.pop(),pinfo=[],errorParsing=!1,pinfoParts.forEach(function(pinfoPart){var pinfoPartInt=parseInt(pinfoPart);if(isNaN(pinfoPartInt)){errorParsing=!0;return}pinfo.push(pinfoPartInt)}),errorParsing?null:{level:level,idHierarchy:pinfo})}function loadEvent(eventGroupName,keys,eventIndex){var isSingletonEventGroup=isSingletonEvent(domPrefix,eventGroupName),day=parseInt((getEventData(keys.day,eventIndex)||"")+"")||null,hasDay=day!=null,month=parseInt((getEventData(keys.month,eventIndex)||"")+"")||null,hasMonth=month!=null,year=parseInt((getEventData(keys.year,eventIndex)||"")+"")||null,hasYear=year!=null,locationText=getEventData(keys.location,eventIndex,"__ftp")||"",hasLocationText=locationText.length>0,event;if(hasLocationText||hasYear||hasMonth||hasDay){event=isSingletonEventGroup?service.getEvent(domPrefix,eventGroupName):service.addEvent(domPrefix,eventGroupName);event.date.year=year;event.date.month=month;event.date.day=day;event.location=locationText;var isYearExactStr=getEventData(keys.year,eventIndex,"_x"),isMonthExactStr=getEventData(keys.month,eventIndex,"_x"),isDayExactStr=getEventData(keys.day,eventIndex,"_x"),yearProximity=parseInt(getEventData(keys.yearProximity,eventIndex))||null,isYearExact=$.inArray(isYearExactStr,generalExactOptions)!==-1||$.inArray(isMonthExactStr,generalExactOptions)!==-1||$.inArray(isDayExactStr,generalExactOptions)!==-1;event.dateProximity.year=isYearExact?yearProximity!=null?yearProximity:0:null;var textExactnessStr=getEventData(keys.location,eventIndex,"__ftp_x")||getEventData(keys.location,eventIndex,"-ftp_x"),gpidExactnessStr=getEventData(keys.location,eventIndex,"_x"),gpid=getEventData(keys.location,eventIndex),pinfoStr=getEventData(keys.location,eventIndex,"_PInfo"),pinfo=getPInfoFromStr(pinfoStr);event.gpid=gpid!=null&&gpid.length>0?gpid:null;event.locationExactness.isExact=event.gpid!=null?$.inArray(gpidExactnessStr,locationExactnesses)!==-1:$.inArray(textExactnessStr,generalExactOptions)!==-1;event.locationExactness.level=event.locationExactness.isExact?0:null;event.locationExactness.isAdjacent=!1;event.location!=null&&event.gpid!=null&&(pinfo!=null&&sfsLocationExactnessProvider.cachePlaceByPrefixResponse({Id:event.gpid,HName:event.location,IdHierarchy:pinfo.idHierarchy,LevelId:pinfo.level,fromPlaceByPrefix:!1}),sfsLocationExactnessProvider.getPlaceInfoByPrefixMatchingGpid(domPrefix,event.location,event.gpid,function(){loadLocationExactness(domPrefix,event,gpidExactnessStr)}))}}function getSearchKey(aliasStr,part){return"ms"+aliasStr+part}var dataModelMetadata=getMetadata(domPrefix);$.each(dataModelMetadata.events,function(eventMetadataKey,eventMetadataObj){eventMetadataObj.alias&&$.each(eventMetadataObj.alias,function(aliasIndex,alias){for(var searchKeys,eventIndex=0;eventIndex<eventMetadataObj.max;++eventIndex)searchKeys={day:getSearchKey(alias,"dd"),month:getSearchKey(alias,"dm"),year:getSearchKey(alias,"dy"),yearProximity:getSearchKey(alias,"dp"),location:getSearchKey(alias,"pn")},loadEvent(eventMetadataKey,searchKeys,eventIndex)})});$.each(dataModelMetadata.customEvents,function(customEventGroupName,customEventMetadata){var searchKeys={day:customEventMetadata.daySearchKey,month:customEventMetadata.monthSearchKey,year:customEventMetadata.yearSearchKey,yearProximity:customEventMetadata.yearProximitySearchKey,location:customEventMetadata.locationSearchKey};loadEvent(customEventGroupName,searchKeys,0)})}function populateFamilyMemberGivenName(domPrefix,data,familyMemberType,index,member){var metadata=getMetadata(domPrefix),groupMetadata=metadata.family[familyMemberType],nameKey=groupMetadata.givenNameParam+(index===-1?"":index),exactKey=nameKey+"_x",givenNameValue=data[nameKey];return givenNameValue==null?null:(member=member||getOrAddFamilyMember(domPrefix,familyMemberType,Math.max(index,0)),member==null)?null:(member.givenName=givenNameValue,member.givenNameExactness.isExact=data[exactKey]==="1",member)}function populateFamilyMemberSurname(domPrefix,data,familyMemberType,index,member){var metadata=getMetadata(domPrefix),groupMetadata=metadata.family[familyMemberType],indexQueryStr=index===-1?"":index.toString(),nameKey=groupMetadata.surnameParam+indexQueryStr,exactKey=nameKey+"_x",surname=data[nameKey];if(surname!=null){if(member=member||getOrAddFamilyMember(domPrefix,familyMemberType,Math.max(index,0)),member==null)return null;if(member.surname=surname.replace(/ +/g," ").replace(/ y /gi," "),metadata.name.usesParentSurnameFields){var firstNameKey=groupMetadata.surnameParam+"f"+indexQueryStr,secondNameKey=groupMetadata.surnameParam+"s"+indexQueryStr,surnames=member.surname.split(" "),isFirstOrSecondSurnameExplicitlyProvided=data[firstNameKey]!=null||data[secondNameKey]!=null;member.firstSurname=isFirstOrSecondSurnameExplicitlyProvided?data[firstNameKey]:surnames.length>=1?surnames[0]:"";member.secondSurname=isFirstOrSecondSurnameExplicitlyProvided?data[secondNameKey]:surnames.length>=2?surnames.slice(1).join(" "):""}return member.surnameExactness.isExact=data[exactKey]==="1",member}}function populateFamilyFromData(domPrefix,data){var metadata=getMetadata(domPrefix),familyMemberTypes=Object.keys(metadata.family);familyMemberTypes.forEach(function(familyMemberType){for(var member,groupConfig=metadata.family[familyMemberType],i=-1;i<groupConfig.maxCount;i++)member=null,member=populateFamilyMemberGivenName(domPrefix,data,familyMemberType,i,member),member=populateFamilyMemberSurname(domPrefix,data,familyMemberType,i,member)})}function resetData(domPrefix){var dataModel=service.getDataModel(domPrefix);dataModel.limitRecordsToCountry=!1;dataModel.searchSource=null;populateCollectionPriority(domPrefix,service.getMetadata(domPrefix).defaultSearchBlock);loadDefaultCategoryBucket(domPrefix);$.extend(!0,dataModel.name,nameDefault);dataModel.isExactAllEnabled=!1;$.each(dataModel.events,function(eventGroupName,eventGroup){isSingletonEvent(domPrefix,eventGroupName)?($.extend(!0,eventGroup.instances[0],eventTemplate),eventGroup.instances.length>1&&eventGroup.instances.splice(1,eventGroup.instances.length-1)):eventGroup.instances.length=0});$.each(dataModel.fields,function(fieldName,field){field.value="";field.isExact=!1});dataModel.range.yearStart=null;dataModel.range.yearEnd=null;clearFamilyMembers(domPrefix);dataModel.treePerson.treeId="";dataModel.treePerson.personId=""}function matchAllTermsExactly(domPrefix,matchAll){function setExactnessPropsToFalse(exactnessProps){$.each(exactnessProps,function(key){exactnessProps[key]=!1})}var dataModel=service.getDataModel(domPrefix);dataModel.isExactAllEnabled=matchAll;dataModel.limitRecordsToCountry=matchAll;dataModel.name.givenNameExactness.isExact=matchAll;dataModel.name.surnameExactness.isExact=matchAll;matchAll||(setExactnessPropsToFalse(dataModel.name.givenNameExactness.flags),setExactnessPropsToFalse(dataModel.name.surnameExactness.flags));$.each(dataModel.events,function(eventGroupIndex,eventGroup){$.each(eventGroup.instances,function(eventIndex,event){event.dateProximity.day=matchAll?event.dateProximity.day!=null?event.dateProximity.day:0:null;event.dateProximity.month=matchAll?event.dateProximity.month!=null?event.dateProximity.month:0:null;event.dateProximity.year=matchAll?event.dateProximity.year!=null?event.dateProximity.year:0:null;event.locationExactness.isExact=matchAll;event.locationExactness.level=matchAll?event.locationExactness.level!=null?event.locationExactness.level:0:null;event.locationExactness.isAdjacent=matchAll&&event.locationExactness.isAdjacent})});$.each(dataModel.family,function(familyGroupIndex,familyGroup){$.each(familyGroup.instances,function(memberIndex,member){member.givenNameExactness.isExact=matchAll;member.surnameExactness.isExact=matchAll})});$.each(dataModel.fields,function(fieldName,field){field.isExact=matchAll})}function isSingletonEvent(domPrefix,eventGroupName){var dataModelMetadata=getMetadata(domPrefix);return $.inArray(eventGroupName,dataModelMetadata.singletonEvents)!==-1}function getEventGroup(domPrefix,eventGroupName){var dataModel=service.getDataModel(domPrefix);return dataModel.events[eventGroupName]}function getEvent(domPrefix,eventGroupName,index){var eventContainer=service.getEventGroup(domPrefix,eventGroupName);return(index=typeof index=="undefined"?0:index,eventContainer==null||index<0||index>=eventContainer.instances.length)?null:eventContainer.instances[index]}function getEventGroupMaxCount(domPrefix,eventGroupName){if(isSingletonEvent(domPrefix,eventGroupName))return 1;var metadata=service.getMetadata(domPrefix);return metadata.events[eventGroupName].max}function addEvent(domPrefix,eventGroupName,insertionIndex){var eventContainer=service.getEventGroup(domPrefix,eventGroupName),index,newCount,eventTemplateObj,newEventObj;return isSingletonEvent(domPrefix,eventGroupName)&&eventContainer.instances.length>0?eventContainer.instances[0]:(index=typeof insertionIndex=="undefined"?eventContainer.instances.length:insertionIndex,eventContainer==null||index<0||index>eventContainer.instances.length)?null:(newCount=eventContainer.instances.length+1,newCount>service.getEventGroupMaxCount(domPrefix,eventGroupName))?null:(eventTemplateObj=service.getDataModel(domPrefix).isExactAllEnabled?eventWithExactnessTemplate:eventTemplate,newEventObj=$.extend(!0,{},eventTemplateObj),eventContainer.instances.splice(index,0,newEventObj),newEventObj)}function removeEvent(domPrefix,eventGroupName,removeIndex){var eventContainer,index;isSingletonEvent(domPrefix,eventGroupName)||(eventContainer=service.getEventGroup(domPrefix,eventGroupName),eventContainer!=null)&&((index=typeof removeIndex=="undefined"?eventContainer.instances.length-1:removeIndex,index<0||index>=eventContainer.instances.length)||eventContainer.instances.splice(index,1))}function getFamilyMemberGroup(domPrefix,familyMemberType){var dataModel=service.getDataModel(domPrefix),familyContainer=dataModel.family[familyMemberType];if(!familyContainer)throw new Error('dataModelProvider does not have a data model with "family.'+familyMemberType+'" property');return familyContainer}function getOrAddFamilyMember(domPrefix,familyMemberType,index){var member=getFamilyMember(domPrefix,familyMemberType,index);return member==null&&(member=service.addFamilyMember(domPrefix,familyMemberType)),member}function getFamilyMember(domPrefix,familyMemberType,index){var familyGroup=getFamilyMemberGroup(domPrefix,familyMemberType);return(index=typeof index=="undefined"?0:index,familyGroup==null||index<0||index>=familyGroup.instances.length)?null:familyGroup.instances[index]}function addFamilyMember(domPrefix,familyMemberType){var metadata=getMetadata(domPrefix),familyMemberContainer=getFamilyMemberGroup(domPrefix,familyMemberType),newFamilyMemberObj;return familyMemberContainer.instances.length>=metadata.family[familyMemberType].maxCount?null:(newFamilyMemberObj=$.extend(!0,{},familyMemberTemplate),metadata.name.usesParentSurnameFields&&(newFamilyMemberObj.firstSurname="",newFamilyMemberObj.secondSurname=""),service.getDataModel(domPrefix).isExactAllEnabled&&(newFamilyMemberObj.givenNameExactness.isExact=!0,newFamilyMemberObj.surnameExactness.isExact=!0),familyMemberContainer.instances.push(newFamilyMemberObj),newFamilyMemberObj)}function removeFamilyMember(domPrefix,relationship,index){var familyMemberContainer=getFamilyMemberGroup(domPrefix,relationship);index<0||index>=familyMemberContainer.instances.length||familyMemberContainer.instances.splice(index,1)}function clearFamilyMembers(domPrefix){var dataModel=service.getDataModel(domPrefix),metadata=service.getMetadata(domPrefix),familyMemberTypes=Object.keys(dataModel.family);familyMemberTypes.forEach(function(familyMemberType){var familyMemberContainer=getFamilyMemberGroup(domPrefix,familyMemberType),i;for(familyMemberContainer.instances.length=0,i=0;i<metadata.family[familyMemberType].instances;++i)addFamilyMember(domPrefix,familyMemberType)})}function getCategoryBucketString(domPrefix){var model=getDataModel(domPrefix),categoryBucketStr="";return model.types.records&&(categoryBucketStr+="r"),model.types.stories&&(categoryBucketStr+="s"),model.types.trees&&(categoryBucketStr+="t"),model.types.photos&&(categoryBucketStr+="p"),categoryBucketStr}function limitDataModelToFieldsOnSearchForm(domPrefix,dataModel,fieldNames){processPersonName(dataModel,fieldNames);processEvents(domPrefix,dataModel,fieldNames);processFamilyMembers(dataModel,fieldNames);processFields(dataModel,fieldNames)}function processPersonName(dataModel,fieldNames){dataModel.name.givenName&&!fieldNameExists("SelfGivenName",fieldNames)&&(dataModel.name.givenName="");dataModel.name.surname&&!fieldNameExists("SelfSurname",fieldNames)&&(dataModel.name.surname="")}function processFields(dataModel,fieldNames){Object.keys(dataModel.fields).forEach(function(key){var field=dataModel.fields[key],fieldName=(field.relation||"")+(field.assertion||"");field.value&&!fieldNameExists(fieldName,fieldNames)&&(field.value=null)})}function processFamilyMembers(dataModel,fieldNames){Object.keys(dataModel.family).forEach(function(key){for(var inst,instances=dataModel.family[key].instances,prefix=key,i=0;i<instances.length;i++)inst=instances[i],inst.givenName&&!fieldNameExists(prefix+"GivenName",fieldNames)&&(inst.givenName=""),inst.surname&&!fieldNameExists(prefix+"Surname",fieldNames)&&(inst.surname="")})}function processEvents(domPrefix,dataModel,fieldNames){Object.keys(dataModel.events).forEach(function(eventGroupName){var evt=dataModel.events[eventGroupName],instances=evt.instances,prefix=(evt.relation||"")+(evt.eventName||""),i,inst;for(evt.instances.length>1&&isSingletonEvent(domPrefix,eventGroupName)&&evt.instances.splice(1,evt.instances.length-1),i=0;i<instances.length;i++)inst=instances[i],inst.date.day&&!fieldNameExists(prefix+"Day",fieldNames)&&(inst.date.day=null),inst.date.month&&!fieldNameExists(prefix+"Month",fieldNames)&&(inst.date.month=null),inst.date.year&&!fieldNameExists(prefix+"Year",fieldNames)&&(inst.date.year=null),inst.location&&!fieldNameExists(prefix+"Place",fieldNames)&&(inst.gpid=null,inst.location=null)})}function fieldNameExists(name,fields){if(!fields)return!1;for(var i=0;i<fields.length;i++)if(fields[i].toLowerCase()===name.toLowerCase())return!0;return!1}var twoNameDefault={value:"",isExact:!1,exactValue:null,firstName:{value:""},secondName:{value:""}},eventTemplate={date:{day:null,month:null,year:null},dateProximity:{day:null,month:null,year:null},gpid:"",location:"",locationExactness:{isExact:!1,isAdjacent:!1,level:null}},eventWithExactnessTemplate={date:{day:null,month:null,year:null},dateProximity:{day:0,month:0,year:0},gpid:"",location:"",locationExactness:{isExact:!0,isAdjacent:!1,level:0}},familyMemberTemplate={givenName:"",givenNameExactness:{flags:{initials:!1,phonetic:!1,similar:!1},isExact:!1},surname:"",surnameExactness:{flags:{soundex:!1,phonetic:!1,similar:!1},isExact:!1}},nameDefault={givenName:"",surname:"",givenNameExactness:{flags:{phonetic:!1,similar:!1,initials:!1},isExact:!1},surnameExactness:{flags:{phonetic:!1,similar:!1,soundex:!1},isExact:!1}},fieldDefault={value:"",isExact:!1},dataModels={},generalExactOptions,locationExactnesses,service;return $window.sfsDataModels=dataModels,generalExactOptions=["1","XO"],locationExactnesses=["1","PCO","PACO","PS","PAS","PC"],service={getDataModel:getDataModel,getMetadata:getMetadata,resetData:resetData,populateFromData:populateFromData,matchAllTermsExactly:matchAllTermsExactly,getEventGroup:getEventGroup,getEvent:getEvent,getEventGroupMaxCount:getEventGroupMaxCount,addEvent:addEvent,removeEvent:removeEvent,addFamilyMember:addFamilyMember,removeFamilyMember:removeFamilyMember,getCategoryBucketString:getCategoryBucketString,getTwoNameDefaults:getTwoNameDefaults,getCollectionFocusItem:getCollectionFocusItem,populateCategoryBucketFromString:populateCategoryBucketFromString,populateCollectionPriority:populateCollectionPriority,limitDataModelToFieldsOnSearchForm:limitDataModelToFieldsOnSearchForm}}]);
angular.module("SearchFormServiceUI").service("sfsLocationExactnessProvider",["$window","$rootScope",function($window,$rootScope){function getExactnesses(gpid){return getExactnessesV2(gpid)||getExactnessesV1(gpid)||[]}function shouldExcludeExactness(exactness,placeInfo){if(exactness.absoluteLevel===7){if($.inArray(5027,placeInfo.idHierarchy)!==-1||$.inArray(3243,placeInfo.idHierarchy)!==-1)return!0}else if(exactness.absoluteLevel===5&&($.inArray(5250,placeInfo.idHierarchy)!==-1||$.inArray(3251,placeInfo.idHierarchy)!==-1||$.inArray(3250,placeInfo.idHierarchy)!==-1))return!0;return!1}function getExactnessObj(locationData,isAdjacent,relativeLevel){return{absoluteLevel:locationData.absoluteLevel,acronym:isAdjacent?locationData.adjacentAcronym:locationData.acronym,isAdjacent:isAdjacent,relativeLevel:relativeLevel}}function getExactnessesV1(gpid){if(gpid==null||cache[gpid]==null)return[];var relativeExactnesses=[],placeInfo=cache[gpid],relativeLevel=-1;return placeExactnesses.forEach(function(placeExactness){placeExactness.absoluteLevel>placeInfo.level||shouldExcludeExactness(placeExactness,placeInfo)||(++relativeLevel,relativeExactnesses.push(getExactnessObj(placeExactness,!1,relativeLevel)),placeExactness.adjacentAcronym&&relativeExactnesses.push(getExactnessObj(placeExactness,!0,relativeLevel)))}),relativeExactnesses}function isGpidMappedToExactnessV2Cache(gpid){return $window.ancestry!=null&&$window.ancestry.search!=null&&$window.ancestry.search.locationExactnesses!=null&&$window.ancestry.search.locationExactnesses[gpid]!=null}function getExactnessesV2(gpid){if(!isGpidMappedToExactnessV2Cache(gpid))return null;var exactnesses=[],locations=$window.ancestry.search.locationExactnesses[gpid],relativeLevel=-1;return locations.forEach(function(locationId){++relativeLevel;var locationData=placeExactnessesMap[locationId];exactnesses.push(getExactnessObj(locationData,!1,relativeLevel));locationData.supportsAdjacency&&exactnesses.push(getExactnessObj(locationData,!0,relativeLevel))}),exactnesses}function debugEnabled(){return/(^|&|[?])debug=1($|&)/.test($window.location.search||"")}var cache={},exactnessStrs=["1","PCO","PACO","PS","PAS","PC"],locationRequests={},locationCache={},placeExactnesses=[{id:"cty",absoluteLevel:8,supportsAdjacency:!1,acronym:"1"},{id:"cnty",absoluteLevel:7,supportsAdjacency:!0,acronym:"PCO",adjacentAcronym:"PACO"},{id:"st",absoluteLevel:5,supportsAdjacency:!0,acronym:"PS",adjacentAcronym:"PAS"},{id:"ctry",absoluteLevel:3,supportsAdjacency:!1,acronym:"PC"}],placeExactnessesMap={};return placeExactnesses.forEach(function(exactness){placeExactnessesMap[exactness.id]=exactness}),{getPlaceInfoByPrefixMatchingGpid:function(domPrefix,location,gpid,callback){function notifyListeners(err,response){request.listeners.forEach(function(listenerCallback){listenerCallback(err,response)});delete locationRequests[location]}function handleError(){$rootScope.$apply(function(){cache[gpid]?notifyListeners(null,cache[gpid]):notifyListeners(new Error("Could not find place info from the place by prefix service with a matching gpid for "+location+" | "+gpid))})}var dummyPlaceInfoUsedOnlyForSettingPinfo,cachedGpid,request;if(isGpidMappedToExactnessV2Cache(gpid)){dummyPlaceInfoUsedOnlyForSettingPinfo={idHierarchy:[],level:0};callback(null,dummyPlaceInfoUsedOnlyForSettingPinfo);return}if(callback=callback||function(){},location==null||location.length===0)return callback(new Error("Location must not be null or empty"));if(locationCache[location])return cachedGpid=locationCache[location],callback(null,cache[cachedGpid]);if(request=locationRequests[location],request){request.listeners.push(callback);return}request={listeners:[callback]};locationRequests[location]=request;var sfsData=$window[domPrefix+"sfsData"],eventPlaceStrs=sfsData.eventPlace,placePickerSourceUrl=(eventPlaceStrs.placePickerUrl||"//placepfx.ancestry.com/s/")+"?callback=?&maxCount=4&cultureId="+(sfsData.cultureId||"en-US"),that=this;$.ajax({url:placePickerSourceUrl+"&prefix="+encodeURIComponent(location),dataType:"jsonp",timeout:debugEnabled()?8e3:2e3,success:function(placeByPrefixResponse){var matchingItem,i,item;if(placeByPrefixResponse==null||placeByPrefixResponse.length<=0)return handleError();for(matchingItem=null,i=0;i<placeByPrefixResponse.length;++i)if(item=placeByPrefixResponse[i],item.Id.toString()===gpid){matchingItem=item;break}if(matchingItem==null)return handleError();$rootScope.$apply(function(){that.cachePlaceByPrefixResponse(matchingItem);notifyListeners(null,cache[gpid])})},error:handleError})},cachePlaceByPrefixResponse:function(placeByPrefixResponse){var gpid=placeByPrefixResponse.Id.toString(),placeInfo={name:placeByPrefixResponse.HName,idHierarchy:placeByPrefixResponse.IdHierarchy,level:placeByPrefixResponse.LevelId};cache[gpid]=placeInfo;placeByPrefixResponse.fromPlaceByPrefix!==!1&&(locationCache[placeInfo.name]=gpid)},getExactnesses:function(domPrefix,gpid){function setPlaceExactnessStrings(placeExactness){placeExactness.optionString=optionStrs[placeExactness.acronym];placeExactness.exactnessString=exactnessStrs[placeExactness.acronym]}var sfsData=$window[domPrefix+"sfsData"],exactnessStrs=sfsData.eventPlaceExactnessDisplay,optionStrs=sfsData.eventPlaceExactnessSelectDisplay,exactnesses=getExactnesses(gpid);return exactnesses.forEach(function(exactness){setPlaceExactnessStrings(exactness)}),exactnesses},getExactnessFromStr:function(gpid,exactnessStr){var exactnesses,i,exactness;if(gpid==null||cache[gpid]==null||exactnessStr==null||exactnessStrs.indexOf(exactnessStr)===-1)return null;for(exactnesses=getExactnesses(gpid),i=0;i<exactnesses.length;++i)if(exactness=exactnesses[i],exactness.acronym===exactnessStr)return exactness;return null}}}]);
(function(){var cacheGroups=[];angular.module("SearchFormServiceUI").service("sfsObjectCache",function(){return{set:function(item,cacheGroupName,object,valuePathOrNull){var cache,cacheItems,i;for(cacheGroups[cacheGroupName]=cacheGroups[cacheGroupName]||{cacheItemsByPath:{},cacheItemsWithNullPath:[]},cache=cacheGroups[cacheGroupName],cacheItems=null,valuePathOrNull==null?cacheItems=cache.cacheItemsWithNullPath:(cache.cacheItemsByPath[valuePathOrNull]=cache.cacheItemsByPath[valuePathOrNull]||[],cacheItems=cache.cacheItemsByPath[valuePathOrNull]),i=0;i<cacheItems.length;++i)if(cacheItems[i]===object)return;cacheItems.push({object:object,item:item})},get:function(cacheGroupName,object,valuePathOrNull){var cache=cacheGroups[cacheGroupName],cacheItems,i,cacheItem;if(!cache||(cacheItems=null,cacheItems=valuePathOrNull==null?cache.cacheItemsWithNullPath:cache.cacheItemsByPath[valuePathOrNull],cacheItems==null))return null;for(i=0;i<cacheItems.length;++i)if(cacheItem=cacheItems[i],cacheItem.object===object)return cacheItem.item;return null}}})})();
(function(){function getEventsFilteredForContentBasedForms(lifeEvents,metadata){var startDate=metadata.collection.yearRange.start,endDate=metadata.collection.yearRange.end,filteredEvents=lifeEvents.filter(function(item){return item.Type!=="r"}),livedInEvents=lifeEvents.filter(function(item){return item.Type==="r"&&item.hasOwnProperty("Date")&&item.Date.hasOwnProperty("Year")&&item.LocationText!=null&&item.LocationText.length>0}),livedInEventsFilteredByYear,livedInEventsBefore,livedInEventsAfter;return livedInEvents.length===0?filteredEvents:(livedInEventsFilteredByYear=livedInEvents.filter(function(item){return item.Date.Year>=startDate&&item.Date.Year<=endDate}).sort(function(a,b){return a.Date.Year-b.Date.Year}),livedInEventsFilteredByYear.length===0&&(livedInEventsBefore=livedInEvents.filter(function(item){return item.Date.Year<startDate}).sort(function(a,b){return b.Date.Year-a.Date.Year}),livedInEventsBefore.length>0&&livedInEventsFilteredByYear.push(livedInEventsBefore[0]),livedInEventsAfter=livedInEvents.filter(function(item){return item.Date.Year>endDate}).sort(function(a,b){return a.Date.Year-b.Date.Year}),livedInEventsAfter.length>0&&livedInEventsFilteredByYear.push(livedInEventsAfter[0])),filteredEvents.concat(livedInEventsFilteredByYear))}function getFilteredEvents(personPickerResponse,metadata){var lifeEvents,eventCounts,i,event,eventCount,date;if(!personPickerResponse.hasOwnProperty("LifeEvents")||personPickerResponse.LifeEvents.length===0)return[];for(lifeEvents=$.extend(!0,[],personPickerResponse.LifeEvents),metadata.form.type==="ContentBased"&&(lifeEvents=getEventsFilteredForContentBasedForms(lifeEvents,metadata)),eventCounts={},i=0;i<lifeEvents.length;i++){event=lifeEvents[i];eventCount=eventCounts[event.Type]||0;eventCounts[event.Type]=++eventCount;var hasReachedMaximumResidenceEvents=event.Type==="r"&&eventCount>4,hasReachedMaximumAnyEvents=event.Type==="y"&&eventCount>11,hasReachedMaximumEventCount=event.Type!=="r"&&event.Type!=="y"&&eventCount>1;if(hasReachedMaximumResidenceEvents||hasReachedMaximumAnyEvents||hasReachedMaximumEventCount){lifeEvents.splice(i,1);--i;continue}date=event.Date;event.Type==="r"&&date&&(date.Day=null,date.Month=null,date.Year=null)}return lifeEvents}function populateEventsForV1(params,personPickerResponse,metadata){var lifeEvents=getFilteredEvents(personPickerResponse,metadata),eventIndices={};lifeEvents.forEach(function(event){var eventIndex=eventIndices[event.Type]||0,date,dayKey,monthKey,yearKey,placeKey,hIndex,h;eventIndices[event.Type]=eventIndex+1;date=event.Date;date&&(date.Day&&(dayKey="ms"+event.Type+"dd"+eventIndex,params[dayKey]=date.Day),date.Month&&(monthKey="ms"+event.Type+"dm"+eventIndex,params[monthKey]=date.Month),date.Year&&(yearKey="ms"+event.Type+"dy"+eventIndex,params[yearKey]=date.Year));event.LocationText&&(placeKey="ms"+event.Type+"pn"+eventIndex,params[placeKey+"__ftp"]=event.LocationText,event.LocationGpids&&(event.LocationGpids.Gpid&&(params[placeKey]=event.LocationGpids.Gpid.toString()),hIndex=event.LocationGpids.GpidHierarchyIndex,h=event.LocationGpids.GpidHierarchy,hIndex&&h&&(params[placeKey+"_PInfo"]=hIndex+"-|"+h.join("|")+"|")))})}function populateFamilyForV1(params,personPickerResponse,metadata){var memberCounts={};personPickerResponse.FamilyMembers.forEach(function(member){var memberType=member.Relationship,memberIndex=memberCounts[memberType]||0,memberIndexStr=memberIndex===0?"":memberIndex.toString(),memberFirstNameKey,memberLastNameKey,surname,surnames;memberType!=="c"&&memberType!=="s"&&memberType!=="b"&&memberIndex>0||(memberCounts[memberType]=memberIndex+1,member.GivenName&&(memberFirstNameKey="ms"+memberType+"ng"+memberIndexStr,params[memberFirstNameKey]=member.GivenName),member.Surname&&(memberLastNameKey="ms"+memberType+"ns"+memberIndexStr,surname=member.Surname.replace(/ +/g," ").replace(/ y /gi," "),params[memberLastNameKey]=surname,metadata.name.usesParentSurnameFields&&(surnames=surname.split(" "),params["ms"+memberType+"nsf"+memberIndexStr]=surnames.length>=1?surnames[0]:"",params["ms"+memberType+"nss"+memberIndexStr]=surnames.length>=2?surnames.slice(1).join(" "):"")))})}function getNormalizedSurnameData(personPickerResponse,metadata){var surname,surnames,maidenName,uniqueSurnameHash,uniqueSurnames;if(!personPickerResponse.hasOwnProperty("Surname")||!personPickerResponse.Surname)return{surname:""};if(surname=personPickerResponse.Surname.replace(/ +/g," ").replace(/ y /gi," "),surnames=surname.split(" "),metadata.name.usesParentSurnameFields)return{surname:surname,firstSurname:surnames.length>=1?surnames[0]:"",secondSurname:surnames.length>=2?surnames.slice(1).join(" "):""};if(personPickerResponse.Gender==="f"){var spouseSurnames=personPickerResponse.SpouseSurnames||[],spouseSurnameLimit=metadata.name.spouseSurnameLimit,spouseSurnameCount=spouseSurnames.length>=spouseSurnameLimit?spouseSurnameLimit:spouseSurnames.length;spouseSurnames=spouseSurnames.slice(0,spouseSurnameCount);maidenName=(personPickerResponse.MaidenName||"").replace(/ +/g," ").replace(/ y /gi," ");maidenName.length>0&&(surnames=surnames.concat(personPickerResponse.MaidenName.split(" ")));surnames=surnames.concat(spouseSurnames)}return uniqueSurnameHash={},uniqueSurnames=[],surnames.forEach(function(surnameArg){surnameArg!=null&&surnameArg.length>0&&!uniqueSurnameHash.hasOwnProperty(surnameArg.toLowerCase())&&(uniqueSurnameHash[surnameArg.toLowerCase()]=!0,uniqueSurnames.push(surnameArg))}),{surname:uniqueSurnames.join(" ")}}function getQueryStringObjectFromV1(personPickerResponse,metadata,defaultParams){var params=$.extend({},defaultParams),surnameData;return params.ssrc="pt_t"+personPickerResponse.TreeId+"_p"+personPickerResponse.PersonId,personPickerResponse.hasOwnProperty("LifeEvents")&&personPickerResponse.LifeEvents.length>0&&populateEventsForV1(params,personPickerResponse,metadata),personPickerResponse.hasOwnProperty("FamilyMembers")&&personPickerResponse.FamilyMembers.length>0&&populateFamilyForV1(params,personPickerResponse,metadata),personPickerResponse.hasOwnProperty("Gender")&&personPickerResponse.Gender&&(params["_83004003-n_xcl"]=personPickerResponse.Gender==="m"?"f":"m"),personPickerResponse.hasOwnProperty("GivenName")&&personPickerResponse.GivenName&&(params.gsfn=personPickerResponse.GivenName),personPickerResponse.hasOwnProperty("Surname")&&personPickerResponse.Surname&&(surnameData=getNormalizedSurnameData(personPickerResponse,metadata),metadata.name.usesParentSurnameFields?(params.gsln=surnameData.surname,params.gsfln=surnameData.firstSurname,params.gssln=surnameData.secondSurname):params.gsln=surnameData.surname),params.MSAV="1",params}function getV2Events(response,metadata){var eventTypes={r:{relation:"Self",eventName:"Residence"},b:{relation:"Self",eventName:"Birth"},d:{relation:"Self",eventName:"Death"},m:{relation:"Self",eventName:"Marriage"},y:{relation:"Self",eventName:""}},events=getFilteredEvents(response,metadata),modelEvents;return events.length===0?{}:(modelEvents={},events.forEach(function(event){var eventMetaData=eventTypes[event.Type],eventGroupName,eventGroup,date,gpid;eventMetaData!=null&&(eventGroupName=eventMetaData.relation+eventMetaData.eventName,eventGroup=modelEvents[eventGroupName]||{instances:[],relation:eventMetaData.relation,eventName:eventMetaData.eventName},modelEvents[eventGroupName]=eventGroup,date=event.Date||{},gpid=event.LocationText!=null&&event.LocationGpids!=null&&event.LocationGpids.Gpid!=null?event.LocationGpids.Gpid.toString():null,eventGroup.instances.push({date:{day:date.Day||null,month:date.Month||null,year:date.Year||null},location:event.LocationText||null,gpid:gpid}))}),modelEvents)}function getV2Family(response){if(!response.hasOwnProperty("FamilyMembers")||response.FamilyMembers.length===0)return{};var memberTypes={c:"child",f:"father",m:"mother",s:"spouse",b:"sibling"},memberCounts={},family={};return response.FamilyMembers.forEach(function(member){var memberType=memberTypes[member.Relationship],memberIndex,newMember,surname;memberType!=null&&((memberIndex=memberCounts[memberType]||0,memberType!=="child"&&memberType!=="spouse"&&memberType!=="sibling"&&memberIndex>0)||(memberCounts[memberType]=memberIndex+1,newMember={},member.GivenName&&(newMember.givenName=member.GivenName),member.Surname&&(surname=member.Surname.replace(/ +/g," ").replace(/ y /gi," "),newMember.surname=surname),(newMember.givenName||newMember.surname)&&(family[memberType]||(family[memberType]={instances:[]}),family[memberType].instances.push(newMember))))}),family}function getV2Gender(response){var gender={value:null,isExact:!1,relation:"Self",assertion:"Gender"};return gender.value=response.Gender==="m"?"male":response.Gender==="f"?"female":null,gender}function getV2Name(response,metadata){var surnameData=getNormalizedSurnameData(response,metadata);return{givenName:response.GivenName||"",surname:surnameData.surname||""}}function getV2ModelFromResponse(response,metadata,currentModel){return{name:getV2Name(response,metadata),fields:{SelfGender:getV2Gender(response)},events:getV2Events(response,metadata),family:getV2Family(response),treePerson:{treeId:response.TreeId,personId:response.PersonId},priority:currentModel.priority,location:$.extend(!0,[],currentModel.location)}}angular.module("SearchFormServiceUI").service("sfsPersonPickerService",["$window","$rootScope","queryParamCollection","sfsDataModelProvider","urlCanonicalizerProvider",function($window,$rootScope,queryParamCollection,sfsDataModelProvider,urlCanonicalizerProvider){return{updateModelFromPersonPickerResponse:function(domPrefix,response){var model=sfsDataModelProvider.getDataModel(domPrefix),metadata=sfsDataModelProvider.getMetadata(domPrefix),queryObj=null,updatedModel,queryNormalizer,queryParamData,collectionFocusItem,params;metadata.querySetVersion==="V2"?(updatedModel=getV2ModelFromResponse(response,metadata,model),sfsDataModelProvider.limitDataModelToFieldsOnSearchForm(domPrefix,updatedModel,metadata.form.fieldNames),queryNormalizer=urlCanonicalizerProvider.getUrlCanonicalizer().queryParamNormalizer,queryParamData=queryNormalizer.toQueryParams(updatedModel,"searchResults",null),queryObj=queryParamData.params):(collectionFocusItem=$.grep(metadata.collectionFocus.items,function(item){return model.priority===item.groupName})[0],params={cp:collectionFocusItem?collectionFocusItem.id.toString():"0",catBucket:sfsDataModelProvider.getCategoryBucketString(domPrefix)},queryObj=getQueryStringObjectFromV1(response,metadata,params));$rootScope.$apply(function(){queryParamCollection.updatePersonPickerParams(queryObj);$rootScope.$broadcast("personPickerUpdated",domPrefix);model.isShowMoreOptionsExpanded=!0})}}}])})()